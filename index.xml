<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>B√° Anh Nguy·ªÖn on B√° Anh Nguy·ªÖn</title>
    <link>https://ngbaanh.github.io/index.xml</link>
    <description>Recent content in B√° Anh Nguy·ªÖn on B√° Anh Nguy·ªÖn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 B√° Anh Nguy·ªÖn</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>New iOS Project</title>
      <link>https://ngbaanh.github.io/project/scanner-and-translator/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ngbaanh.github.io/project/scanner-and-translator/</guid>
      <description></description>
    </item>
    
    <item>
      <title>‚òòT·∫≠p Code 3: T·ªânh t√°o v·ªõi ph√©p so s√°nh khi l·∫≠p tr√¨nh</title>
      <link>https://ngbaanh.github.io/post/tap-code-3--tinh-tao-voi-phep-so-sanh-khi-lap-trinh/</link>
      <pubDate>Sat, 08 Apr 2017 23:15:00 +0000</pubDate>
      
      <guid>https://ngbaanh.github.io/post/tap-code-3--tinh-tao-voi-phep-so-sanh-khi-lap-trinh/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://ngbaanh.github.io/img/post_img/tap-code-03/comparison.jpg&#34; alt=&#34;comparison - (c) Personal Trainer Land&#34; /&gt;
&lt;em&gt;Ch√∫ √Ω: C√°c v·∫•n ƒë·ªÅ ƒëang b√†n lu·∫≠n ch·ªâ x√©t trong ph·∫°m vi ng√¥n ng·ªØ&lt;/em&gt; &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;C++&lt;/code&gt; &lt;em&gt;v√†&lt;/em&gt; &lt;code&gt;Java&lt;/code&gt;. &lt;em&gt;C√°c ng√¥n ng·ªØ kh√°c s·∫Ω c√≥ nh·ªØng ƒë·∫∑c tr∆∞ng ri√™ng c√≥ th·ªÉ kh√¥ng gi·ªëng v·ªõi nh·ªØng g√¨ b√™n d∆∞·ªõi&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-so-s√°nh-hai-chu·ªói&#34;&gt;1. So s√°nh hai chu·ªói&lt;/h1&gt;

&lt;p&gt;V√† ƒë√¢y l√† l·ªói m√† ƒëa s·ªë c√°c b·∫°n m·ªõi h·ªçc &lt;code&gt;C&lt;/code&gt; ho·∫∑c &lt;code&gt;Java&lt;/code&gt; m·∫Øc ph·∫£i:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;if (string1 == string2) {
  // l√†m g√¨ ƒë√≥
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;C·∫£m quan th√¨ &amp;lsquo;c√≥ v·∫ª&amp;rsquo; ƒë√∫ng l·∫Øm nh∆∞ng ti·∫øc l√† kh√¥ng ƒë√∫ng v·ªõi √Ω t∆∞·ªüng ng∆∞·ªùi t·∫°o ra ng√¥n ng·ªØ. Nguy√™n nh√¢n s√¢u xa th√¨ m√¨nh kh√¥ng bi·∫øt nh∆∞ng m√† ch·ªâ nh·ªõ ph·∫£i theo c√°c quy t·∫Øc c·ªßa ng∆∞·ªùi ta.
V·ªõi C/C++:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;if ( strcmp(string1, string2) == 0 ) {
  // l√†m g√¨ ƒë√≥
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;·ªû ƒë√¢y &lt;code&gt;strcmp&lt;/code&gt; l√† vi·∫øt t·∫Øt c·ªßa &lt;code&gt;string comparison&lt;/code&gt;, thu·ªôc &lt;code&gt;string.h&lt;/code&gt;, c√≥ ch·ª©c nƒÉng so s√°nh hai chu·ªói theo th·ª© t·ª± ch·ªØ c√°i trong t·ª´ ƒëi·ªÉn. Gi√° tr·ªã tr·∫£ v·ªÅ &lt;code&gt;0&lt;/code&gt; cho bi·∫øt 2 chu·ªói b·∫±ng nhau, gi√° tr·ªã tr·∫£ v·ªÅ &lt;code&gt;√¢m&lt;/code&gt; th√¨ &lt;code&gt;string1&lt;/code&gt; ·ªü tr∆∞·ªõc &lt;code&gt;string2&lt;/code&gt;, gi√° tr·ªã tr·∫£ v·ªÅ &lt;code&gt;d∆∞∆°ng&lt;/code&gt; th√¨ &lt;code&gt;string1&lt;/code&gt; ·ªü sau &lt;code&gt;string2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;C√≤n v·ªõi Java:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;if ( string1.equals(string2) ) {
  // l√†m g√¨ ƒë√≥
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;V·ªõi Java th√¨ n√≥ ƒë∆°n gi·∫£n d·ªÖ hi·ªÉu h∆°n nhi·ªÅu, c√≤n v·ªõi C th√¨ ta c·∫ßn quay l·∫°i m·ªôt ch√∫t. Xem v√≠ d·ª• b√™n d∆∞·ªõi:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;string.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;

void so_sanh(const char* chuoi_1, const char* chuoi_2) {
    int gia_tri = strcmp(chuoi_1, chuoi_2);
    printf(&amp;quot;gia_tri = %d \n&amp;quot;, gia_tri);
    if (gia_tri == 0) {
      printf(&amp;quot;&#39;%s&#39; BANG &#39;%s&#39; \n&amp;quot;, chuoi_1, chuoi_2);
    } else if (gia_tri &amp;lt; 0) {
      printf(&amp;quot;&#39;%s&#39; NHO HON &#39;%s&#39; \n&amp;quot;, chuoi_1, chuoi_2);  
    } else if(gia_tri &amp;gt; 0) {
      printf(&amp;quot;&#39;%s&#39; LON HON &#39;%s&#39; \n&amp;quot;, chuoi_1, chuoi_2);
    }
    printf(&amp;quot;-------------\n\n&amp;quot;);
}

int main() {
    const char* chuoi = &amp;quot;Xin chao&amp;quot;;
    so_sanh(chuoi, &amp;quot;Xin chao!&amp;quot;); // co them dau &#39;!&#39;
    so_sanh(chuoi, &amp;quot;Xin chao&amp;quot;);
    so_sanh(chuoi, &amp;quot;Xin chao ban&amp;quot;);
    so_sanh(chuoi, &amp;quot;Chao&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;K·∫øt qu·∫£ l√†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gia_tri = -33
&#39;Xin chao&#39; NHO HON &#39;Xin chao!&#39;
-------------

gia_tri = 0
&#39;Xin chao&#39; BANG &#39;Xin chao&#39;
-------------

gia_tri = -32
&#39;Xin chao&#39; NHO HON &#39;Xin chao ban&#39;
-------------

gia_tri = 21
&#39;Xin chao&#39; LON HON &#39;Chao&#39;
-------------
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;R√µ r·ªìi nh∆∞ng m√† c√°i &lt;code&gt;gia_tri&lt;/code&gt; l√† c√°i g√¨ m√† m·ªói l·∫ßn so s√°nh n√≥ l·∫°i ra m·ªôt s·ªë kh√°c nhau th·∫ø? ƒê·ªÉ ki·ªÉm tra l·∫°i n√≥ c·ª• th·ªÉ l√† c√°i g√¨ th√¨ c√≥ th·ªÉ s·ª≠a l·∫°i trong h√†m &lt;code&gt;so_sanh&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;// ...
#include &amp;lt;stdlib.h&amp;gt;

void so_sanh(const char* chuoi_1, const char* chuoi_2) {
    int gia_tri = strcmp(chuoi_1, chuoi_2);
    printf(&amp;quot;gia_tri = %d ---&amp;gt; &#39;%c&#39; \n&amp;quot;, gia_tri, abs(gia_tri));
    //...
}
//...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;K·∫øt qu·∫£ l√†:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gia_tri = -33 ---&amp;gt; &#39;!&#39;
&#39;Xin chao&#39; NHO HON &#39;Xin chao!&#39;
-------------

gia_tri = 0 ---&amp;gt; &#39;&#39;
&#39;Xin chao&#39; BANG &#39;Xin chao&#39;
-------------

gia_tri = -32 ---&amp;gt; &#39; &#39;
&#39;Xin chao&#39; NHO HON &#39;Xin chao ban&#39;
-------------

gia_tri = 21 ---&amp;gt; &#39;&#39;
&#39;Xin chao&#39; LON HON &#39;Chao&#39;
-------------
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;R√µ r·ªìi nh√©, gi√° tr·ªã ch√≠nh l√† s·ªë th·ª© t·ª± c·ªßa k√≠ t·ª± kh√°c nhau ƒë·∫ßu ti√™n trong b·∫£ng ASCII. 33 l√† k√≠ t·ª± ch·∫•m than, c√≤n 32 l√† k√≠ t·ª± tr·∫Øng. C√≤n d·∫•u th√¨ ch·ªâ ƒë·ªÉ xem c√°i n√†o nh·ªè h∆°n hay l·ªõn h∆°n m√† th√¥i. C√≤n k√≠ t·ª± s·ªë 21 l√† k√≠ t·ª± ƒëi·ªÅu khi·ªÉn, kh√¥ng in ra ƒë∆∞·ª£c n√™n s·∫Ω c√≥ &lt;code&gt;&#39;&#39;&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;Ch√∫ √Ω h√†m strcmp() so s√°nh ki·ªÉu th·ª© t·ª± t·ª´ ƒëi·ªÉn, b·∫£ng alphabet c·ªßa ti·∫øng anh s·∫Ω c√≥ kh√°c m·ªôt s·ªë ng√¥n ng·ªØ kh√°c, khi ƒë√≥ gi·∫£i ph√°p thay th·∫ø l√† strcoll(), m√¨nh s·∫Ω kh√¥ng gi·∫£i th√≠ch ·ªü ƒë√¢y.&lt;/p&gt;

&lt;/div&gt;


&lt;h1 id=&#34;2-so-s√°nh-hai-s·ªë-th·ª±c&#34;&gt;2. So s√°nh hai s·ªë th·ª±c&lt;/h1&gt;

&lt;p&gt;ƒêa s·ªë c√°c ng√¥n ng·ªØ l·∫≠p tr√¨nh ƒë·ªÅu c√≥ 2 ki·ªÉu s·ªë th·ª±c l√† &lt;code&gt;float&lt;/code&gt; v√† &lt;code&gt;double&lt;/code&gt;. Nhi·ªÅu khi b·∫•t c·∫©n ta c√≥ th·ªÉ s·∫Ω c√≥ nh·ªØng ph√©p so s√°nh nh∆∞ sau:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;float a = 0.123;
double b = 0.123;
printf(&amp;quot;A = %f \nB = %f\n&amp;quot;, a, b);
if (a == b) {
  printf(&amp;quot;BANG NHAU \n&amp;quot;);
} else {
  printf(&amp;quot;KHAC NHAU \n&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Th·ª±c ti·ªÖn hai s·ªë ƒë√≥ b·∫±ng nhau nh∆∞ng v√†o m√°y th√¨ ü§£&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;A = 0.123000
B = 0.123000
KHAC NHAU
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Code ch·∫°y ngon l√†nh nh∆∞ng ƒë√¥i khi kh√¥ng bi·∫øt l·ªói ·ªü ƒë√¢u ra, c√°i n√†y th·ª±c s·ª± r·∫•t nguy hi·ªÉm.&lt;/p&gt;

&lt;h1 id=&#34;3-th·ª±c-hi·ªán-ph√©p-t√≠nh-trong-m·ªánh-ƒë·ªÅ-ƒëi·ªÅu-ki·ªán&#34;&gt;3. Th·ª±c hi·ªán ph√©p t√≠nh trong m·ªánh ƒë·ªÅ ƒëi·ªÅu ki·ªán&lt;/h1&gt;

&lt;p&gt;C√°i n√†y m·ªôt s·ªë b·∫°n v·∫´n s·∫Ω m·∫Øc b·∫´y v√¨ ƒë√¥i khi mu·ªën r√∫t g·ªçn ph√©p t√≠nh v√†o ngay trong l√∫c so s√°nh. V√≠ d·ª• b√†i to√°n ki·ªÉm tra s·ªë nguy√™n &lt;code&gt;a&lt;/code&gt; c√≥ g·∫•p ba s·ªë &lt;code&gt;b&lt;/code&gt; hay kh√¥ng?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int a = 30, b = 10;
if (a / 3 == b) {
  printf(&amp;quot;A gap ba B&amp;quot;);
} else {
  printf(&amp;quot;A khong gap ba B&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;K·∫øt qu·∫£:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;A gap ba B
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;C≈©ng ƒëo·∫°n tr√™n thay th√†nh &lt;code&gt;a = 10, b = 3&lt;/code&gt;, ta c√≥ k·∫øt qu·∫£ m·ªõi:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;A gap ba B
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vi di·ªáu ch∆∞a? Sai t√® le lu√¥n. B·ªüi v√¨ k·∫øt qu·∫£ ph√©p chia 2 s·ªë nguy√™n s·∫Ω lu√¥n l√† m·ªôt s·ªë nguy√™n. Vi·ªác t√≠nh to√°n ·ªü ƒë√¢y ph·∫£i c·∫©n th·∫≠n v√¨ b√™n c·∫°nh tr∆∞·ªùng h·ª£p l√†m tr√≤n s·ªë th√¨ c√≤n l·ªói tr√†n n·ªØa:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;char a = 200;
if (a * 2 &amp;gt; 100) {
  printf (&amp;quot;2A &amp;gt; 100&amp;quot;);
} else {
  printf (&amp;quot;2A &amp;lt;= 100&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;K·∫øt qu·∫£:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;2A &amp;lt;= 100
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;V√¢ng, &lt;code&gt;400 &amp;lt;= 100&lt;/code&gt; ch·ªâ v√¨ n√≥ tr√†n ki·ªÉu d·ªØ li·ªáu &lt;code&gt;char&lt;/code&gt; (t·ªëi ƒëa 255 n√™n 2 * 200 = -112, v√† m√°y n√≥ hi·ªÉu -112 &amp;lt;= 100 l√† ƒë√∫ng).&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;p&gt;ƒê·∫∑t ph√©p t√≠nh v√†o l√∫c so s√°nh, l√† h√†nh ƒë·ªông b√≥p d*i th·∫±ng debugger, chi√™u th·ª©c n√†y ·∫©n ch·ª©a nguy hi·ªÉm ti·ªÅm t√†ng c√≥ th·ªÉ d·∫´n ƒë·∫øn v√¥ sinh xin c√°c b·∫°n c·∫©n th·∫≠n.&lt;/p&gt;

&lt;/div&gt;


&lt;h1 id=&#34;4-so-s√°nh-x-0-hay-0-x&#34;&gt;4. So s√°nh: x == 0 hay 0 == x?&lt;/h1&gt;

&lt;p&gt;L√∫c ƒëi h·ªçc th√¨ g·∫ßn nh∆∞ 100% ng∆∞·ªùi h·ªçc ƒë·ªÅu ƒë∆∞·ª£c d·∫°y r·∫±ng mu·ªën so s√°nh A v·ªõi m·ªôt h·∫±ng B th√¨ c·ª© nh·∫•t nh·∫•t l√† b√™n tr√°i l√† A, b√™n ph·∫£i l√† B. Nh∆∞ng m√† v·ªõi ki·ªÉu d·ªØ li·ªáu tham chi·∫øu, li√™n quan ƒë·∫øn con tr·ªè v√† ƒë·ªëi t∆∞·ª£ng th√¨ ƒë√¢y m·ªõi l√† v·∫•n ƒë·ªÅ.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;B·∫°n s·∫Ω g·∫∑p NULL nh∆∞ ch∆∞a t·ª´ng g·∫∑p v·ªõi ki·ªÉu so s√°nh th·ª© nh·∫•t.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;V√≠ d·ª• 1 ƒëo·∫°n code Java ki·ªÉm tra 1 th·∫±ng c√≥ h·ªçc l·ªõp &amp;ldquo;CNTT&amp;rdquo; (l√† m·ªôt chu·ªói h·∫±ng) hay kh√¥ng.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class HocSinh {
	String hoTen;
	Lop lop;
}
class Lop {
	String tenLop;
	String giaoVienChuNhiem;
}

public class Main {
	public static void main(String[] args) {
		HocSinh baAnh = new HocSinh();
		baAnh.lop = new Lop(); // Qu√™n g√°n t√™n l·ªõp
		if (baAnh.lop.tenLop.equals(&amp;quot;CNTT&amp;quot;)) { // So s√°nh
			System.out.print(&amp;quot;H·ªçc l·ªõp CNTT&amp;quot;);
		} else {
			System.out.print(&amp;quot;Kh√¥ng h·ªçc l·ªõp CNTT&amp;quot;);
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Th·ª≠ ch·∫°y ph√°t:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Exception in thread &amp;quot;main&amp;quot; java.lang.NullPointerException
	at Main.main(Main.java:15)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Do &lt;code&gt;baAnh.lop.tenLop&lt;/code&gt; ch∆∞a ƒë∆∞·ª£c kh·ªüi t·∫°o n√™n d·∫Ω d√≠nh &lt;code&gt;null&lt;/code&gt; s·∫Ω b·ªã l·ªói. Gi·∫£i ph√°p nghƒ© ƒë·∫øn ƒë·∫ßu ti√™n l√† ki·ªÉm tra kh√°c null tr∆∞·ªõc khi so s√°nh.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;if (baAnh.lop.tenLop != null &amp;amp;&amp;amp; baAnh.lop.tenLop.equals(&amp;quot;CNTT&amp;quot;)) { ... }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;V√† n√≥ ƒë√£ ch·∫°y:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Kh√¥ng h·ªçc l·ªõp CNTT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;May qu√° m·ªõi so s√°nh 1 th·∫±ng, l·ª° so s√°nh v√†i th·∫±ng th√¨ ƒë√∫ng l√† v√™u m·ªìm t·∫≠p 2 üò≠, gi·∫£i ph√°p c·ª±c k√¨ ƒë∆°n gi·∫£n l√† ƒë·∫£o v·ªã tr√≠ c·ªßa 2 c√°i cho nhau, nh∆∞ th·∫ø n√†y:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;if (&amp;quot;CNTT&amp;quot;.equals(baAnh.lop.tenLop)) { ... }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cho ra k·∫øt qu·∫£ t∆∞∆°ng t·ª±:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Kh√¥ng h·ªçc l·ªõp CNTT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ƒê∆°n gi·∫£n ph·∫£i kh√¥ng n√†o, n√© ƒë∆∞·ª£c bi·∫øt bao nhi√™u l√† phi·ªÅn ph·ª©c, t∆∞∆°ng t·ª± nh∆∞ v·∫≠y c·ª© ƒë·∫£o h·∫øt gi√° tr·ªã h·∫±ng so s√°nh l√™n tr∆∞·ªõc, bi·∫øn ho·∫∑c ƒë·ªëi t∆∞·ª£ng c·∫ßn so s√°nh ra sau. Ok nh√© üëç&lt;/p&gt;

&lt;p&gt;Ch√∫c b·∫°n cu·ªëi tu·∫ßn vui v·∫ª.&lt;/p&gt;

&lt;p&gt;üçÄ ngbaanh üçÄ&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>‚òòT·∫≠p Code 2: V√≤ng l·∫∑p v√¥ t·∫≠n WHILE hay FOR?</title>
      <link>https://ngbaanh.github.io/post/tap-code-2--vong-lap-vo-tan-while-hay-for/</link>
      <pubDate>Thu, 06 Apr 2017 20:42:00 +0000</pubDate>
      
      <guid>https://ngbaanh.github.io/post/tap-code-2--vong-lap-vo-tan-while-hay-for/</guid>
      <description>

&lt;p&gt;&lt;em&gt;V√≤ng l·∫∑p, l√† m·ªôt trong nh·ªØng ƒëi·ªÅu c∆° b·∫£n nh·∫•t c·ªßa m·ªôt t∆∞ duy l·∫≠p tr√¨nh. V√† 2 ƒë·∫°i di·ªán kinh ƒëi·ªÉn cho n√≥ ch√≠nh l√† for v√† while. V·∫≠y c·ª• th·ªÉ ch√∫ng c√≥ g√¨ kh√°c nhau v√† c√°ch t·ªët nh·∫•t ƒë·ªÉ thi·∫øt l·∫≠p m·ªôt v√≤ng l·∫∑p v√¥ t·∫≠n.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;v√≤ng-l·∫∑p-l√†&#34;&gt;V√≤ng l·∫∑p l√†&amp;hellip;&lt;/h1&gt;

&lt;p&gt;Khi ph·∫£i th·ª±c hi·ªán nh·ªØng c√¥ng vi·ªác gi·ªëng nhau, ho·∫∑c g·∫ßn gi·ªëng nhau, n√¥m na l√† l·∫∑p ƒëi l·∫∑p l·∫°i m·ªôt c√°i g√¨ ƒë√≥ nh√†m ch√°n, thay v√¨ ph·∫£i sao ch√©p m·ªôt ƒë·ªëng m√£ y h·ªát nhau ƒë·ªÉ chia vi·ªác l√†m th√¨ ch√∫ng ta c·∫ßn m·ªôt c·∫•u tr√∫c n√†o ƒë√≥ tinh g·ªçn v√† hi·ªáu qu·∫£.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;C√°ch m√† m·ªôt h·ªçc sinh b√¨nh th∆∞·ªùng ch√©p ph·∫°t&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Em xin h·ª©a s·∫Ω kh√¥ng n√≥i chuy·ªán ri√™ng trong l·ªõp n·ªØa.&lt;/p&gt;

&lt;p&gt;Em xin h·ª©a s·∫Ω kh√¥ng n√≥i chuy·ªán ri√™ng trong l·ªõp n·ªØa.&lt;/p&gt;

&lt;p&gt;Em xin h·ª©a s·∫Ω kh√¥ng n√≥i chuy·ªán ri√™ng trong l·ªõp n·ªØa.&lt;/p&gt;

&lt;p&gt;Em xin h·ª©a s·∫Ω kh√¥ng n√≥i chuy·ªán ri√™ng trong l·ªõp n·ªØa.&lt;/p&gt;

&lt;p&gt;&amp;hellip; (994 l·∫ßn)&lt;/p&gt;

&lt;p&gt;Em xin h·ª©a s·∫Ω kh√¥ng n√≥i chuy·ªán ri√™ng trong l·ªõp n·ªØa.&lt;/p&gt;

&lt;p&gt;Em xin h·ª©a s·∫Ω kh√¥ng n√≥i chuy·ªán ri√™ng trong l·ªõp n·ªØa.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;C√°ch m√† l·∫≠p tr√¨nh vi√™n ch√©p ph·∫°t&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;for (int i = 0; i &amp;lt; 1000; i++) printf(&amp;quot;Em xin h·ª©a s·∫Ω kh√¥ng n√≥i chuy·ªán ri√™ng trong l·ªõp n·ªØa&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;V·∫≠y th√¨ theo hi·ªÉu bi·∫øt m√≥p m√©o c·ªßa m√¨nh, v√≤ng l·∫∑p l√† &lt;code&gt;lu·ªìng ƒëi·ªÅu khi·ªÉn&lt;/code&gt; cho ph√©p c√°c ƒëo·∫°n m√£ th·ª±c hi·ªán l·∫∑p ƒëi l·∫∑p l·∫°i. Th√¥ng th∆∞·ªùng c√°c v√≤ng l·∫∑p ƒë·ªÅu c√≥ 3 th√†nh ph·∫ßn ch√≠nh: &lt;code&gt;c√°c gi√° tr·ªã kh·ªüi t·∫°o&lt;/code&gt;, &lt;code&gt;ƒëi·ªÅu ki·ªán duy tr√¨ v√≤ng l·∫∑p&lt;/code&gt;, &lt;code&gt;c√°c m√£ l·ªánh c·∫ßn l·∫∑p&lt;/code&gt;. V√≤ng l·∫∑p s·∫Ω d·ª´ng l·∫°i khi kh√¥ng tho·∫£ m√£n ƒëi·ªÅu ki·ªán duy tr√¨ cho n√≥ n·ªØa.&lt;/p&gt;

&lt;p&gt;C√≥ nhi·ªÅu c·∫•u tr√∫c ƒë·ªÉ th·ªÉ hi·ªán v√≤ng l·∫∑p nh∆∞ &lt;code&gt;for do&lt;/code&gt;, &lt;code&gt;while do&lt;/code&gt;, &lt;code&gt;repeat until&lt;/code&gt;, &lt;code&gt;do while&lt;/code&gt;,&amp;hellip; Nh∆∞ng trong ph·∫°m vi b√†i vi·∫øt n√†y m√¨nh ch·ªâ x√©t ƒë·∫øn 2 c√°i ƒë·∫ßu ti√™n.&lt;/p&gt;

&lt;h1 id=&#34;v√≤ng-l·∫∑p-v·ªõi-for&#34;&gt;V√≤ng l·∫∑p v·ªõi FOR&lt;/h1&gt;

&lt;p&gt;H∆°i ng∆∞·ª£c th·ª© t·ª± v·ªõi ti√™u ƒë·ªÅ ch√∫t, b·ªüi v√¨ v√≠ d·ª• b√™n tr√™n l·ª° d√πng FOR n√™n n√≥i v·ªÅ n√≥ tr∆∞·ªõc.
V√≤ng l·∫∑p FOR l√† m·ªôt v√≤ng l·∫∑p cho ph√©p ng∆∞·ªùi l·∫≠p tr√¨nh √°p d·ª•ng ƒë·∫ßy ƒë·ªß c√°c th√†nh ph·∫ßn ƒë√£ n√™u b√™n tr√™n. Ngo√†i ra n√≥ c√≤n c√≥ th√™m 1 &lt;code&gt;bi·ªÉu_th·ª©c&lt;/code&gt; l√† n∆°i ƒë·ªÉ t√≠nh to√°n sau khi m·ªói v√≤ng l·∫∑p ho√†n th√†nh.&lt;/p&gt;

&lt;p&gt;Th√¥ng th∆∞·ªùng s·∫Ω c√≥ c·∫•u tr√∫c (v·ªõi c√°c ng√¥n ng·ªØ thu·ªôc h·ªç C)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;for (c√°c_gi√°_tr·ªã_kh·ªüi_t·∫°o; ƒëi·ªÅu_ki·ªán; bi·ªÉu_th·ª©c) {
  m√£_l·ªánh_c·∫ßn_th·ª±c_thi;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ngo√†i ra n√≥ c√≤n c√≥ 1 bi·∫øn th·ªÉ kh√°c g·ªçi l√† &lt;code&gt;for each&lt;/code&gt;, d√†nh cho c√°c c√¥ng vi·ªác nh∆∞ duy·ªát 1 chi·ªÅu t·ª´ ƒë·∫ßu ƒë·∫øn cu·ªëi 1 chu·ªói, &lt;code&gt;bi·ªÉu_th·ª©c&lt;/code&gt; kh√¥ng th·ª±c s·ª± qu√° c·∫ßn thi·∫øt.&lt;/p&gt;

&lt;p&gt;V√≠ d·ª•: Cho x=0, y=0. L·∫∑p 10 l·∫ßn, c·ª© m·ªói l·∫ßn th√¨ tƒÉng x l√™n 2, y l√™n 3.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int i, x, y, dx, dy;
for (i = 0, x = 0, y = 0, dx = 2, dy = 3; i &amp;lt; 10; i++) {
  x = x + dx;
  y = y + dy;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;V√† khi thi·∫øu khuy·∫øt c√°c y·∫øu t·ªë th√¨ v√≤ng for v·∫´n ch·∫°y b√¨nh th∆∞·ªùng. ƒêo·∫°n m√£ sau t∆∞∆°ng ƒë∆∞∆°ng ƒëo·∫°n b√™n tr√™n.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int i = 0, x = 0, y = 0, dx = 2, dy = 3;
for (; i &amp;lt; 10;) {
  x = x + dx;
  y = y + dy;
  i++;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ch√∫ √Ω l√† c√≥ th·ªÉ v·ª©t g√¨ ƒë√≥ c≈©ng ƒë∆∞·ª£c nh∆∞ng m√† kh√¥ng ƒë∆∞·ª£c v·ª©t d·∫•u &lt;code&gt;;&lt;/code&gt; nh√©.&lt;/p&gt;

&lt;h1 id=&#34;v√≤ng-l·∫∑p-v·ªõi-while&#34;&gt;V√≤ng l·∫∑p v·ªõi WHILE&lt;/h1&gt;

&lt;p&gt;H∆°i kh√°c m·ªôt ch√∫t v·ªõi for. Th√¥ng th∆∞·ªùng th√¨ v√≤ng l·∫∑p &lt;code&gt;for&lt;/code&gt; s·∫Ω bi·∫øt tr∆∞·ªõc ƒë∆∞·ª£c tr∆∞·ªõc s·ªë l·∫ßn l·∫∑p (m·∫∑c d√π v·∫´n c√≥ v√†i tr∆∞·ªùng h·ª£p c√° bi·ªát ra), c√≤n v√≤ng l·∫∑p &lt;code&gt;while&lt;/code&gt; ch·∫Øc ch·∫Øn s·∫Ω kh√¥ng bi·∫øt tr∆∞·ªõc n√≥ l·∫∑p bao nhi√™u l·∫ßn c·∫£, v√† n√≥ ch·ªâ c√≥ 1 ƒëi·ªÅu ki·ªán ƒë·∫ßu v√†o m√† th√¥i, thi·∫øu n√≥ th√¨ kh√¥ng ƒë∆∞·ª£c, n√≥ s·∫Ω l·∫∑p cho ƒë·∫øn khi n√†o ƒëi·ªÅu ki·ªán kh√¥ng tho·∫£ m√£n n·ªØa th√¨ d·ª´ng. &lt;code&gt;for&lt;/code&gt; v·∫´n d·ªÖ t√≠nh h∆°n &lt;code&gt;while&lt;/code&gt; nh·ªâ!&lt;/p&gt;

&lt;p&gt;C·∫•u tr√∫c:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;while (ƒëi·ªÅu_ki·ªán) {
  m√£_l·ªánh_c·∫ßn_th·ª±c_thi;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;L·∫•y l·∫°i v√≠ d·ª• b√™n tr√™n, ta c√≥ c√°ch bi·ªÉu di·ªÖn v·ªõi &lt;code&gt;while&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int i = 10, x = 0, y = 0, dx = 2, dy = 3;
while (i &amp;gt; 0) {
  x = x + dx;
  y = y + dy;
  i--;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://ngbaanh.github.io/img/post_img/tap-code-02/infinite-loop.jpg&#34; alt=&#34;Infinite Loop - (c) John Robson&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;v√≤ng-l·∫∑p-v√¥-t·∫≠n&#34;&gt;V√≤ng l·∫∑p v√¥ t·∫≠n&lt;/h1&gt;

&lt;p&gt;C√≥ nh·ªØng l√∫c ch√∫ng ta c·∫ßn m·ªôt ƒëo·∫°n m√£ ch·∫°y ƒëi ch·∫°y l·∫°i m√† kh√¥ng c·∫ßn d·ª´ng (v√≠ d·ª• c·∫ßn duy tr√¨ k·∫øt n·ªëi ch·∫≥ng h·∫°n), th√¨ ch·ªâ c·∫ßn l√†m cho v√≤ng l·∫∑p lu√¥n tho·∫£ m√£n ƒëi·ªÅu ki·ªán l·∫∑p. L√∫c n√†y c√°ch duy nh·∫•t ƒë·ªÉ tho√°t ra t·ª´ b√™n trong l√† s·ª≠ d·ª•ng t·ª´ kho√° &lt;code&gt;break&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;C·∫£ &lt;code&gt;for&lt;/code&gt; v√† &lt;code&gt;while&lt;/code&gt; ƒë·ªÅu l√†m ƒë∆∞·ª£c ƒëi·ªÅu n√†y. B√†i vi·∫øt ƒëang s·ª≠ d·ª•ng ng√¥n ng·ªØ C l√†m chu·∫©n, th√¨ ta c√≥ nh∆∞ sau:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;for (;;) {
  m√£_l·ªánh_c·∫ßn_th·ª±c_thi;
}

while (1) {
  m√£_l·ªánh_c·∫ßn_th·ª±c_thi;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;p&gt;Ch√∫ √Ω: L√†m vi·ªác v·ªõi th·ªÉ lo·∫°i n√†y c·∫ßn h·∫øt s·ª©c c·∫©n th·∫≠n, b·ªüi v√¨ kh√¥ng c√≥ ƒëi·ªÅu ki·ªán cho n√≥ d·ª´ng n√™n ho·∫∑c l√† n√≥ s·∫Ω t√†n ph√° d·ªØ li·ªáu c·ªßa b·∫°n, ho·∫∑c l√† g√¢y ng·∫≠p b·ªô nh·ªõ ho·∫∑c m·ªôt s·ªë h·∫≠u qu·∫£ kh√°c.&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;Code &amp;lsquo;th√¥ng minh&amp;rsquo;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;// ...
for(;;);
// ...
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;c√°i-n√†o-t·ªët-h∆°n&#34;&gt;C√°i n√†o t·ªët h∆°n?&lt;/h1&gt;

&lt;p&gt;M√¨nh d√°m c√° l√† kho·∫£ng 80% coder s·∫Ω ch·ªçn c√°ch th·ª© 2 b√™n tr√™n, t·ª©c l√† d√πng &lt;code&gt;while&lt;/code&gt;.
L√≠ do? ƒê∆°n gi·∫£n l√† nh√¨n c√°ch ƒë·∫ßu ti√™n qu√° k√¨ c·ª•c, kh√¥ng d·ªÖ hi·ªÉu b·∫±ng c√°ch th·ª© 2.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;M√¨nh c≈©ng t·ª´ng ·ªü trong 80% n√†y v√† b√¢y gi·ªù ƒë√£ nh·∫£y qua 20% c√≤n l·∫°i.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;L√≠ do? L√† b·ªüi v√¨ c√°i c√°ch m√† tr√¨nh bi√™n d·ªãch ƒë·ªëi x·ª≠ v·ªõi m·ªánh ƒë·ªÅ ƒëi·ªÅu ki·ªán trong d·∫•u &lt;code&gt;()&lt;/code&gt;.
V√† d·ªÖ d√†ng th·∫•y ƒëo·∫°n code tr√™n trong &lt;code&gt;C&lt;/code&gt; th√¨ ƒë√∫ng, nh∆∞ng trong &lt;code&gt;C++&lt;/code&gt; v√† &lt;code&gt;Java&lt;/code&gt; v√† m·ªôt s·ªë ng√¥n ng·ªØ kh√°c n·ªØa s·∫Ω ph·∫£i l√† &lt;code&gt;while(true)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Trong khi ƒë√≥ n·∫øu s·ª≠ d·ª•ng &lt;code&gt;for(;;)&lt;/code&gt; th√¨ m·ªçi chuy·ªán s·∫Ω ƒë·ªÅu √™m ƒë·∫πp, kh√¥ng c·∫ßn ph·∫£i ph√¢n v√¢n nhi·ªÅu.
V·ªõi l·∫°i &lt;code&gt;while(1)&lt;/code&gt; s·∫Ω gi·ªëng &lt;code&gt;while(10)&lt;/code&gt;, gi·∫£ s·ª≠ c√≥ m·ªôt ƒëo·∫°n code &lt;code&gt;while(12345) { ... }&lt;/code&gt; th√¨ sao, v·∫´n ƒë√∫ng nh∆∞ng g√¢y ·ª©c ch·∫ø cho ng∆∞·ªùi n√†o b·∫£o tr√¨ n√≥.&lt;/p&gt;

&lt;p&gt;C≈©ng b·ªüi v√¨ gi·ªëng nhau trong nhi·ªÅu ng√¥n ng·ªØ l·∫≠p tr√¨nh, n√™n &lt;code&gt;for(;;)&lt;/code&gt; g·∫ßn nh∆∞ bi·∫øn th√†nh m·ªôt &lt;code&gt;t·ª´ kho√°&lt;/code&gt;. Nh∆∞ v·∫≠y code trong s·∫Ω xinh x·∫Øn h∆°n nhi·ªÅu.&lt;/p&gt;

&lt;p&gt;C√° nh√¢n m√¨nh, t·ª´ng s·ª≠ d·ª•ng while v√† b√¢y gi·ªù ƒë√£ nh·∫£y sang for. C√≤n b·∫°n, b·∫°n ƒë√£ ƒë·ªïi qua ch∆∞a?&lt;/p&gt;

&lt;p&gt;üçÄ ngbaanh üçÄ&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>‚òòT·∫≠p Code: Vi·∫øt h√†m x·∫øp lo·∫°i h·ªçc sinh</title>
      <link>https://ngbaanh.github.io/post/tap-code--viet-ham-xep-loai-hoc-sinh/</link>
      <pubDate>Sun, 19 Mar 2017 11:34:00 +0000</pubDate>
      
      <guid>https://ngbaanh.github.io/post/tap-code--viet-ham-xep-loai-hoc-sinh/</guid>
      <description>

&lt;h1 id=&#34;ƒë·∫∑t-v·∫•n-ƒë·ªÅ&#34;&gt;ƒê·∫∑t v·∫•n ƒë·ªÅ&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;H√¥m nay cu·ªëi tu·∫ßn r·∫£nh r·ªói n√™n vi·∫øt b√†i ƒë·∫ßu ti√™n v·ªÅ Series T·∫≠p Code, ƒë·∫øn b√¢y gi·ªù c≈©ng code ƒë∆∞·ª£c m·ªôt v√†i nƒÉm b√¢y gi·ªù nh·ªõ l·∫°i nh·ªØng b√†i to√°n nƒÉm x∆∞a tuy ƒë∆°n gi·∫£n nh∆∞ng l√†m m√¨nh b·ªëi r·ªëi kh√¥n c√πng.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;C√πng xem chi ti·∫øt b√†i to√°n nh√©.&lt;/p&gt;

&lt;p&gt;ƒêi·ªÅu ki·ªán ƒë√°nh gi√° v√† x·∫øp lo·∫°i h·ªçc sinh nh∆∞ sau:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;H·ªçc sinh thi 3 m√¥n To√°n, L√Ω, Ho√° ƒë∆∞·ª£c ƒë√°nh gi√° &lt;code&gt;h·ªçc l·ª±c&lt;/code&gt; tr√™n thang ƒëi·ªÉm &lt;code&gt;10&lt;/code&gt;. Thang x·∫øp lo·∫°i h·ªçc l·ª±c t·ª´ cao ƒë·∫øn th·∫•p th·ª© t·ª± nh∆∞ sau: &lt;code&gt;Gi·ªèi, Kh√°, Trung B√¨nh, Y·∫øu&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;H·ªçc sinh c≈©ng ƒë∆∞·ª£c ƒë√°nh gi√° &lt;code&gt;r√®n luy·ªán&lt;/code&gt; tr√™n thang ƒëi·ªÉm &lt;code&gt;10&lt;/code&gt;. Thang x·∫øp lo·∫°i t∆∞∆°ng t·ª± thang x·∫øp lo·∫°i h·ªçc l·ª±c: &lt;code&gt;T·ªët, Kh√°, Trung B√¨nh, Y·∫øu&lt;/code&gt;. X·∫øp lo·∫°i ph·∫£i t∆∞∆°ng ·ª©ng v·ªõi nƒÉng l·ª±c.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ƒêi·ªÉm trung b√¨nh chung nh·ªè h∆°n 5.0 th√¨ &lt;code&gt;x·∫øp lo·∫°i ban ƒë·∫ßu&lt;/code&gt; &lt;em&gt;Y·∫øu&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ƒêi·ªÉm trung b√¨nh chung t·ª´ 5.0 ƒë·∫øn d∆∞·ªõi 6.5 th√¨ x·∫øp lo·∫°i ban ƒë·∫ßu &lt;em&gt;Trung B√¨nh&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ƒêi·ªÉm trung b√¨nh chung t·ª´ 6.5 ƒë·∫øn d∆∞·ªõi 8.0 th√¨ x·∫øp lo·∫°i ban ƒë·∫ßu &lt;em&gt;Kh√°&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ƒêi·ªÉm trung b√¨nh chung t·ª´ 8.0 tr·ªü l√™n th√¨ x·∫øp lo·∫°i ban ƒë·∫ßu &lt;em&gt;Gi·ªèi&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;H·ªçc sinh &lt;code&gt;x·∫øp lo·∫°i ban ƒë·∫ßu&lt;/code&gt; &lt;em&gt;Kh√°, Gi·ªèi&lt;/em&gt; ch·ªâ khi c√≥ ƒëi·ªÉm r√®n luy·ªán t∆∞∆°ng ƒë∆∞∆°ng v√† ƒëi·ªÉm th√†nh ph·∫ßn 3 m√¥n c√≥ x·∫øp lo·∫°i t∆∞∆°ng ·ª©ng t·ª´ &lt;em&gt;Trung B√¨nh, Kh√°&lt;/em&gt; tr·ªü l√™n. N·∫øu kh√¥ng th√¨ gi·∫£m m·ªôt b·∫≠c.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Trong c√°c ƒëi·ªÉm th√†nh ph·∫ßn, n·∫øu c√≥ b·∫•t k√¨ ƒëi·ªÉm n√†o nh·ªè h∆°n 3.0, th√¨ l·∫≠p t·ª©c &lt;code&gt;x·∫øp lo·∫°i&lt;/code&gt; Y·∫øu.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;Y√™u c·∫ßu&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Vi·∫øt m·ªôt h√†m ƒë√°nh gi√° b·∫±ng ng√¥n ng·ªØ C, ƒë·∫ßu v√†o ƒëi·ªÉm thi 3 m√¥n v√† ƒëi·ªÉm r√®n luy·ªán, ƒë·∫ßu ra l√† m·ªôt chu·ªói ƒë√°nh gi√° x·∫øp lo·∫°i thu·ªôc b·ªô &lt;code&gt;{4, 3, 2, 1, 0}&lt;/code&gt; t∆∞∆°ng ·ª©ng thang x·∫øp lo·∫°i trong ƒë·ªÅ b√†i v√† &lt;code&gt;0&lt;/code&gt; l√† kh√¥ng ƒë√°nh gi√° ƒë∆∞·ª£c.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;B√†i to√°n ai c≈©ng bi·∫øt, ƒë√£ l√†m l·∫≠p tr√¨nh t·∫•t c·∫£ ƒë·ªÅu ƒë√£ l√†m qua nh∆∞ng m√† m√¨nh v·∫´n th·∫•y n√≥ c√≥ √≠ch n√™n vi·∫øt l·∫°i. ƒê·ªÉ ng·∫Øn g·ªçn th√¨ nh·ªØng ƒëi·ªÉm c·∫ßn l∆∞u √Ω m√¨nh ƒë√£ ƒë√°nh d·∫•u n·ªïi b·∫≠t ngay trong ƒë·ªÅ b√†i b√™n tr√™n. L∆∞u √Ω ng√¥n ng·ªØ C ·ªü ƒë√¢y  l√† &lt;code&gt;Standard C&lt;/code&gt; ch·ª© kh√¥ng ph·∫£i C++ ho·∫∑c C# nh√© (v√¨ l√∫c vi·∫øt b√†i n√†y m√°y m√¨nh ch·ªâ c√≥ C th√¥i).&lt;/p&gt;

&lt;p&gt;Sau khi ƒë·ªçc xong ƒë·ªÅ b√†i th√¨ l·∫≠p t·ª©c t·∫•t c·∫£ ƒë·ªÅu c√≥ th·ªÉ h√¨nh dung ra nguy√™n m·∫´u h√†m nh∆∞ sau, d√≤m qua ƒë·ªÉ nh·∫£y sang ph·∫ßn sau nh√©.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;int danh_gia(float toan, float ly, float hoa, float rl);
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;chu·∫©n-b·ªã-nh·ªØng-g√¨-ƒë·ªÉ-b·∫Øt-ƒë·∫ßu&#34;&gt;Chu·∫©n b·ªã nh·ªØng g√¨ ƒë·ªÉ b·∫Øt ƒë·∫ßu&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;V·ªõi nh·ªØng b·∫°n s·ª≠ d·ª•ng Windows th√¨ c√≥ th·ªÉ d√πng b·∫•t k√¨ c√°i g√¨ ƒë√≥ code C ƒë∆∞·ª£c nh∆∞ DevCpp, ho·∫∑c CodeBlock hay g√¨ g√¨ ƒë√≥ kh√°c l√† ok r·ªìi. M√¨nh chia tay Windows r·ªìi th√¨ s·ª≠ d·ª•ng Terminal thay th·∫ø v·∫≠y, m√°y m√¨nh c≈©ng ch·∫≥ng c√†i g√¨ n√™n ch·ªâ c√≥ ng√¥n ng·ªØ C l√† l√†m ƒë∆∞·ª£c tr·ª±c ti·∫øp m√† th√¥i.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Tr∆∞·ªõc ti√™n ch√∫ng ta di chuy·ªÉn ƒë·∫øn ƒë√¢u ƒë√≥ trong m√°y t√≠nh, t·∫°o m·ªôt th∆∞ m·ª•c ƒë·ªÉ ch·ª©a t·ªáp m√£ ngu·ªìn. ·ªû ƒë√¢y m√¨nh s·∫Ω t·∫°o ngay gi·ªØa &lt;code&gt;Desktop&lt;/code&gt; m·ªôt th∆∞ m·ª•c &lt;code&gt;tap-code&lt;/code&gt;, sau ƒë√≥ t·∫°o t·ªáp &lt;code&gt;main.c&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd ~/Desktop/
$ mkdir tap-code &amp;amp;&amp;amp; cd tap-code
$ touch main.c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;M·ªü n√≥ ra v√† chi·∫øn th√¥i, tu·ª≥ c√°c b·∫°n mu·ªën m·ªü n√≥ trong IDE hay Notepad, c√≤n n·∫øu ai ƒë√≥ nh√°c nh∆∞ m√¨nh th√¨ x·ª≠ l√≠ ngay t·∫°i c√°i Terminal v·ªõi &lt;code&gt;nano&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ nano main.c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://ngbaanh.github.io/img/post_img/tap-code-01/Helloworld.mp4&#34; title=&#34;Click to play HD quality&#34;&gt;&lt;img src=&#34;https://ngbaanh.github.io/img/post_img/tap-code-01/Helloworld.gif&#34; alt=&#34;Hello world&#34; /&gt;&lt;/a&gt;
Ph·∫£i ki·ªÉm tra m·ªçi th·ª© th·ª±c s·ª± ·ªïn tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu. üòπ&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;p&gt;H·ªìi x∆∞a h·ªçc c·∫•p 2 l√∫c ƒëang l√†m thi th·ª±c h√†nh Pascal, v·ª´a ƒë·ªçc ƒë·ªÅ xong lao v√†o code no x√¥i ch√°n ch√® th√¨ build kh√¥ng ƒë∆∞·ª£c, nguy√™n nh√¢n l√† do m√°y b·ªã x√¨ ke t·ª´ s·ªõm, l√∫c chuy·ªÉn sang m√°y kh√°c th√¨ kh√¥ng k·ªãp n·ªØa r·ªìi.&lt;/p&gt;

&lt;/div&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;Tr∆∞·ªõc khi b·∫Øt tay l√†m g√¨ ph·∫£i ƒë·∫£m b·∫£o HelloWorld ch·∫°y ƒë∆∞·ª£c, m·∫•t c√≥ 16 gi√¢y th√¥i c√°c b·∫°n ·∫°.&lt;/p&gt;

&lt;/div&gt;
&lt;/p&gt;

&lt;h1 id=&#34;quay-l·∫°i-gi·∫£i-quy·∫øt-b√†i-to√°n&#34;&gt;Quay l·∫°i gi·∫£i quy·∫øt b√†i to√°n&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;C√≥ th·ªÉ th·∫•y l√† b√†i to√°n n√†y c√≥ qu√° nhi·ªÅu ƒëi·ªÅu ki·ªán l·∫±ng nh·∫±ng v·ªõi nhau, nh∆∞ng ch√∫ng ta h√£y khoan code ngay m√† ƒë√°nh gi√° n√≥ tr∆∞·ªõc. Ph·∫£i t·∫≠p trung x·ª≠ l√≠ nh·ªØng ƒëi·ªÅu ki·ªán mang t√≠nh quy·∫øt ƒë·ªãnh tr∆∞·ªõc.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-ƒë·∫ßu-ti√™n-l√†-h·ª£p-l·ªá-d·ªØ-li·ªáu&#34;&gt;1. ƒê·∫ßu ti√™n l√† h·ª£p l·ªá d·ªØ li·ªáu&lt;/h2&gt;

&lt;p&gt;Ch√∫ng ta ph·∫£i ƒë·∫£m b·∫£o r·∫±ng ng∆∞·ªùi ta nh·∫≠p ƒëi·ªÉm t·ª´ 0.0 ~ 10.0, ƒë·∫ßu v√†o sai m√† c√≤n nh√¢y l√¨ t√≠nh to√°n l√† kh√¥ng ƒë∆∞·ª£c. Cho n√™n n·∫øu d·ªØ li·ªáu sai th√¨ ph·∫£i tr·∫£ v·ªÅ &lt;code&gt;0&lt;/code&gt; ngay l·∫≠p t·ª©c.  üòà&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int danh_gia(float toan, float ly, float hoa, float rl) {
  if (toan &amp;lt; 0 || ly &amp;lt; 0 || hoa &amp;lt; 0 || rl &amp;lt; 0 || toan &amp;gt; 10 || ly &amp;gt; 10 || hoa &amp;gt; 10 || rl &amp;gt; 10) {
    return 0; // --KH√îNG ƒê√ÅNH GI√Å ƒê∆Ø·ª¢C
  }
  // ... CODE N·∫æU H·ª¢P L·ªÜ
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sau c√¢u l·ªánh &lt;code&gt;return&lt;/code&gt; kh√¥ng m·ªôt d√≤ng code n√†o ƒë∆∞·ª£c th·ª±c thi n·ªØa, cho n√™n l√∫c n√†y ta c√≥ th·ªÉ vi·∫øt ti·∫øp m√† kh√¥ng c·∫ßn c·ª•m &lt;code&gt;else { ... }&lt;/code&gt; n·ªØa. Vi·∫øt xu·ªëng b√™n d∆∞·ªõi.&lt;/p&gt;

&lt;h2 id=&#34;2-ƒëi·ªÅu-ki·ªán-lo·∫°i-b·ªè-nh·ªØng-s·ª±-th·∫≠t-hi·ªÉn-nhi√™n&#34;&gt;2. ƒêi·ªÅu ki·ªán lo·∫°i b·ªè, nh·ªØng s·ª± th·∫≠t hi·ªÉn nhi√™n&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;hellip; X·∫øp lo·∫°i ph·∫£i t∆∞∆°ng ·ª©ng v·ªõi nƒÉng l·ª±c.
Trong c√°c ƒëi·ªÉm th√†nh ph·∫ßn, n·∫øu c√≥ b·∫•t k√¨ ƒëi·ªÉm n√†o nh·ªè h∆°n 3.0, th√¨ l·∫≠p t·ª©c x·∫øp lo·∫°i Y·∫øu.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ƒê√¢y l√† tr∆∞·ªùng h·ª£p th·∫•y x·∫øp lo·∫°i ngay m√† kh√¥ng c·∫ßn t√≠nh to√°n, üòå vi·∫øt ti·∫øp xu·ªëng b√™n d∆∞·ªõi:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int danh_gia(float toan, float ly, float hoa, float rl) {
  if (toan &amp;lt; 0 || ly &amp;lt; 0 || hoa &amp;lt; 0 || rl &amp;lt; 0 || toan &amp;gt; 10 || ly &amp;gt; 10 || hoa &amp;gt; 10 || rl &amp;gt; 10) {
    return 0; // --KH√îNG ƒê√ÅNH GI√Å ƒê∆Ø·ª¢C
  }
  if (toan &amp;lt; 3 || ly &amp;lt; 3 || hoa &amp;lt; 3 || rl &amp;lt; 5) { return 1; } // --Y·∫æU
  // ... CODE N·∫æU C·∫¶N T√çNH TO√ÅN
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-x√°c-ƒë·ªãnh-x·∫øp-lo·∫°i-ban-ƒë·∫ßu&#34;&gt;3. X√°c ƒë·ªãnh x·∫øp lo·∫°i ban ƒë·∫ßu&lt;/h2&gt;

&lt;p&gt;C·∫ßn t√≠nh ƒëi·ªÉm trung b√¨nh chung c·ªßa 3 m√¥n h·ªçc m·ªõi x√©t ti·∫øp ƒë∆∞·ª£c.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int danh_gia(float toan, float ly, float hoa, float rl) { // [ ... ]
  // ... CODE N·∫æU C·∫¶N T√çNH TO√ÅN
  float tb = (toan + ly + hoa) / 3;
  int xep_loai = tb &amp;lt; 5.0 ? 1 : (tb &amp;lt; 6.5 ? 2 : (tb &amp;lt; 8.0 ? 3 : 4));
  // ... CODE S√ÄNG L·ªåC
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ƒêo·∫°n code t√≠nh x·∫øp lo·∫°i ban ƒë·∫ßu nh∆∞ tr√™n s·ª≠ d·ª•ng to√°n t·ª≠ ƒëi·ªÅu ki·ªán &lt;code&gt;?:&lt;/code&gt; cho ng·∫Øn g·ªçn b·ªüi v√¨ m·ªói nh√°nh r·∫Ω ra n√≥ ch·ªâ th·ª±c hi·ªán 1 c√¥ng vi·ªác duy nh·∫•t l√† g√°n d·ªØ li·ªáu. Di·ªÖn gi·∫£i ra th√¨ nh∆∞ th·∫ø n√†y, qu√° d√†i ph·∫£i kh√¥ng:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int xep_loai;
if (tb &amp;lt; 5.0) { xep_loai = 1; }      // --Y·∫æU
else if (tb &amp;lt; 6.5) { xep_loai = 2; } // --TRUNG B√åNH
else if (tb &amp;lt; 8.0) { xep_loai = 3; } // --KH√Å
else { xep_loai = 4; }               // --GI·ªéI
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;4-s√†ng-l·ªçc-x·∫øp-lo·∫°i&#34;&gt;4. S√†ng l·ªçc x·∫øp lo·∫°i&lt;/h2&gt;

&lt;p&gt;Ti√™u chu·∫©n s√†ng l·ªçc ·ªü ƒë√¢y ch·ªâ √°p d·ª•ng cho h·ªçc sinh &lt;em&gt;Kh√°&lt;/em&gt; tr·ªü l√™n, g·ªçi l√† thu g·ªçn nhu·ªá kh√≠ c·ªßa c√°c anh ·∫•y b·ªõt, ƒë·ªÉ ho√† ƒë·ªìng h∆°n v·ªõi nh·ªØng ƒë·ª©a h·ªçc l·ª±c trung b√¨nh nh∆∞ m√¨nh.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ƒê√πa ƒë·∫•y üòÇ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ƒê∆°n gi·∫£n l√† x√©t c√°i &lt;code&gt;xep_loai&lt;/code&gt; ƒë√£ t√≠nh ƒë∆∞·ª£c ·ªü ban n√£y:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int danh_gia(float toan, float ly, float hoa, float rl) { // [ ... ]
  // ... CODE S√ÄNG L·ªåC
  if (xep_loai == 3) { // --N·∫æU ANH ·∫§Y TI·∫æN B·ªò?
    if (toan &amp;lt; 5.0 || ly &amp;lt; 5.0 || hoa &amp;lt; 5.0 || rl &amp;lt; 6.5) { // --M·ªêC H·∫† KH√Å-&amp;gt;TB
      xep_loai--;
    }
  }
  if (xep_loai == 4) { // --N·∫æU ANH ·∫§Y TI·∫æN B·ªò H∆†N?
    if (toan &amp;lt; 6.5 || ly &amp;lt; 6.5 || hoa &amp;lt; 6.5 || rl &amp;lt; 8.0) { // --M·ªêC H·∫† GI·ªéI-&amp;gt;KH√Å
      xep_loai--;
    }
  }
  // ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;B·∫°n c√≥ th·∫•y 4 l·ªánh if ch·ªìng nhau h∆°i v√¥ duy√™n kh√¥ng üòÑ r√∫t n√≥ ng·∫Øn b·ªõt l·∫°i:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int danh_gia(float toan, float ly, float hoa, float rl) { // [ ... ]
  // ... CODE S√ÄNG L·ªåC
  if (xep_loai == 3 &amp;amp;&amp;amp; (toan &amp;lt; 5.0 || ly &amp;lt; 5.0 || hoa &amp;lt; 5.0 || rl &amp;lt; 6.5)) {
    xep_loai--;
  }
  if (xep_loai == 4 &amp;amp;&amp;amp; (toan &amp;lt; 6.5 || ly &amp;lt; 6.5 || hoa &amp;lt; 6.5 || rl &amp;lt; 8.0)) {
    xep_loai--;
  }
  return xep_loai;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cu·ªëi c√πng ph·∫£i tr·∫£ v·ªÅ k·∫øt qu·∫£ x·∫øp lo·∫°i, th√™m c√¢u l·ªánh &lt;code&gt;return&lt;/code&gt; v√†o cu·ªëi h√†m.&lt;/p&gt;

&lt;h2 id=&#34;5-x√¢y-d·ª±ng-b·ªô-th·ª≠&#34;&gt;5. X√¢y d·ª±ng b·ªô th·ª≠&lt;/h2&gt;

&lt;p&gt;ƒê·ªÉ bi·∫øt c√°i m√¨nh code c√≥ ch·∫°y ƒë√∫ng hay kh√¥ng th√¨ c·∫ßn x√¢y d·ª±ng m·ªôt v√†i tr∆∞·ªùng h·ª£p th·ª≠ ƒë·ªÉ ki·ªÉm tra.
Gi·∫£ s·ª≠ ta bi·∫øt ch·∫Øc m·ªôt v√†i tr∆∞·ªùng h·ª£p th√¨ c√≥ th·ªÉ ch·ªçn ra ƒë·ªÉ th·ª≠. V√≠ d·ª• b·∫£ng sau:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ngbaanh.github.io/img/post_img/tap-code-01/002.png&#34; alt=&#34;Test cases&#34; /&gt;
D·ª±a v√†o th√¥ng tin tr√™n ta thi·∫øt k·∫ø m·ªôt h√†m &lt;code&gt;kiem_tra()&lt;/code&gt; ƒë·ªÉ th·ª≠ xem h√†m &lt;code&gt;danh_gia()&lt;/code&gt; c√≥ ho·∫°t ƒë·ªông ƒë√∫ng nh∆∞ mong ƒë·ª£i hay kh√¥ng.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;void kiem_tra() {
  const int dong = 9, cot = 5;
  // -- D·ªØ li·ªáu: { To√°n; L√Ω; Ho√°; R√®n Luy·ªán; K·∫øt Qu·∫£ Mong ƒê·ª£i },
  float data[dong][cot] = {
    { 11 , 9.0, 9.0, 9.0, 0 },
    { 9.0, 9.0, 9.0, 9.0, 4 },
    { 7.0, 7.0, 7.0, 7.0, 3 },
    { 6.0, 6.0, 6.0, 6.0, 2 },
    { 3.5, 4.0, 6.0, 6.5, 1 },

    { 2.5, 9.0, 8.0, 6.0, 1 },
    { 6.0, 9.0, 9.0, 8.0, 3 },
    { 7.0, 8.0, 9.0, 4.5, 1 },
    { 4.0, 9.0, 8.0, 6.0, 2 }
  };
  int i, ketqua;
  printf(&amp;quot;==== BAT DAU KIEM TRA =====\n&amp;quot;);
  for (i = 0; i &amp;lt; dong; i++) {
    ketqua = danh_gia(data[i][0], data[i][1], data[i][2], data[i][3]);
    printf(&amp;quot;DanhGia(%2.1f, %2.1f, %2.1f, %2.1f) = %i | %i | %10s.\n&amp;quot;,
      data[i][0], data[i][1], data[i][2], data[i][3], ketqua,
      (int)data[i][4],
      ((int)data[i][4] == ketqua ? &amp;quot;[o]&amp;quot; : &amp;quot;&amp;gt;&amp;gt; [x]&amp;quot;)
    );
  }
  printf(&amp;quot;======== KET THUC =========\n&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;C√°i m·∫£ng 2 chi·ªÅu ƒë√≥ n√™n l√† n·∫°p d·ªØ li·ªáu t·ª´ file ƒë·ªÉ ti·ªán ƒë∆∞·ªùng ch·ªânh s·ª≠a sau n√†y, ph·∫°m vi b√†i vi·∫øt m√¨nh ƒë·∫∑t lu√¥n v√†o ƒë√≥ cho g·ªçn.&lt;/p&gt;

&lt;/div&gt;


&lt;h2 id=&#34;6-t·∫≠n-h∆∞·ªüng-th√†nh-qu·∫£&#34;&gt;6. T·∫≠n h∆∞·ªüng th√†nh qu·∫£&lt;/h2&gt;

&lt;p&gt;Ch√∫ng ta c·∫ßn ph·∫£i vi·∫øt m·ªôt ch∆∞∆°ng tr√¨nh ho√†n ch·ªânh ƒë·ªÉ ki·ªÉm tra:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;stdio.h&amp;gt;

int danh_gia(float, float, float, float);
void kiem_tra();

int main() {
  //printf(&amp;quot;Hello world \n&amp;quot;);
  kiem_tra();
  return 0;
}

int danh_gia(float toan, float ly, float hoa, float rl) {
  if (toan &amp;lt; 0 || ly &amp;lt; 0 || hoa &amp;lt; 0 || rl &amp;lt; 0 || toan &amp;gt; 10 || ly &amp;gt; 10 || hoa &amp;gt; 10 || rl &amp;gt; 10) { return 0; }
  if (toan &amp;lt; 3 || ly &amp;lt; 3 || hoa &amp;lt; 3 || rl &amp;lt; 5) { return 1; } // --Y·∫æU
  float tb = (toan + ly + hoa) / 3;
  int xep_loai = tb &amp;lt; 5.0 ? 1 : (tb &amp;lt; 6.5 ? 2 : (tb &amp;lt; 8.0 ? 3 : 4));
  if (xep_loai == 3 &amp;amp;&amp;amp; (toan &amp;lt; 5.0 || ly &amp;lt; 5.0 || hoa &amp;lt; 5.0 || rl &amp;lt; 6.5)) {
    xep_loai--; // --H·∫† KH√Å &amp;gt; TB
  }
  if (xep_loai == 4 &amp;amp;&amp;amp; (toan &amp;lt; 6.5 || ly &amp;lt; 6.5 || hoa &amp;lt; 6.5 || rl &amp;lt; 8.0)) {
    xep_loai--; // --H·∫† GI·ªéI &amp;gt; KH√Å
  }
  return xep_loai;
}

void kiem_tra() {
  const int dong = 9, cot = 5;
  // -- D·ªØ li·ªáu: { To√°n; L√Ω; Ho√°; R√®n Luy·ªán; K·∫øt Qu·∫£ Mong ƒê·ª£i },
  float data[dong][cot] = {
    { 11 , 9.0, 9.0, 9.0, 0 },
    { 9.0, 9.0, 9.0, 9.0, 4 },
    { 7.0, 7.0, 7.0, 7.0, 3 },
    { 6.0, 6.0, 6.0, 6.0, 2 },
    { 3.5, 4.0, 6.0, 6.5, 1 },

    { 2.5, 9.0, 8.0, 6.0, 1 },
    { 6.0, 9.0, 9.0, 8.0, 3 },
    { 7.0, 8.0, 9.0, 4.5, 1 },
    { 4.0, 9.0, 8.0, 6.0, 2 }
  };
  int i, ketqua;
  printf(&amp;quot;==== BAT DAU KIEM TRA =====\n&amp;quot;);
  for (i = 0; i &amp;lt; dong; i++) {
    ketqua = danh_gia(data[i][0], data[i][1], data[i][2], data[i][3]);
    printf(&amp;quot;DanhGia(%2.1f, %2.1f, %2.1f, %2.1f) = %i | %i | %10s.\n&amp;quot;,
      data[i][0], data[i][1], data[i][2], data[i][3], ketqua,
      (int)data[i][4],
      ((int)data[i][4] == ketqua ? &amp;quot;[o]&amp;quot; : &amp;quot;&amp;gt;&amp;gt; [x]&amp;quot;)
    );
  }
  printf(&amp;quot;======== KET THUC =========\n&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Th·ª±c hi·ªán bi√™n d·ªãch v√† ch·∫°y th·ª≠ ch∆∞∆°ng tr√¨nh, n·∫øu b·∫°n ƒëang d√πng terminal nh∆∞ m√¨nh:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ gcc -o main main.c &amp;amp;&amp;amp; ./main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Th√¨ ƒë√¢y l√† k·∫øt qu·∫£: üòé
&lt;img src=&#34;https://ngbaanh.github.io/img/post_img/tap-code-01/003.png&#34; alt=&#34;Tested cases&#34; /&gt;&lt;/p&gt;

&lt;p&gt;C·ªë t√¨nh ph√° h·ªèng d·ªØ li·ªáu tr∆∞·ªùng h·ª£p th·ª≠ th·ª© 6 th√†nh: &lt;code&gt;{ 2.5, 9.0, 8.0, 6.0, 2 },&lt;/code&gt; v√† k·∫øt qu·∫£ m·ªõi s·∫Ω l√†&amp;hellip;
&lt;img src=&#34;https://ngbaanh.github.io/img/post_img/tap-code-01/004.png&#34; alt=&#34;Tested cases failed&#34; /&gt;&lt;/p&gt;

&lt;p&gt;üëå Qu√° hay ph·∫£i kh√¥ng, n·∫øu m·ªói l·∫ßn s·ª≠a ƒë·ªïi h√†m &lt;code&gt;danh_gia()&lt;/code&gt; (c√≥ th·ªÉ s·∫Ω d·∫´n ƒë·∫øn sai, m√† ƒëa ph·∫ßn l√† kh√¥ng bi·∫øt sai ·ªü ƒë√¢u) th√¨ ch·ªâ c·∫ßn g·ªçi h√†m &lt;code&gt;kiem_tra()&lt;/code&gt; m·ªôt l·∫ßn, ta s·∫Ω bi·∫øt ƒë∆∞·ª£c tr∆∞·ªùng h·ª£p n√†o sai, t·ª´ ƒë√≥ d·ªÖ d√†ng khoanh v√πng ƒë·ªÉ t√¨m l·ªói h∆°n l√† m·ªói ki·ªÉm tra ph·∫£i nh·∫≠p ƒëi nh·∫≠p l·∫°i.&lt;/p&gt;

&lt;h1 id=&#34;k·∫øt-lu·∫≠n&#34;&gt;K·∫øt lu·∫≠n&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;L·ªùi ch√†o cao h∆°n m√¢m c·ªó, ch·∫°y Hello world tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu c√¥ng vi·ªác.&lt;/li&gt;
&lt;li&gt;Ki·ªÉm tra d·ªØ li·ªáu c√≥ h·ª£p l·ªá hay kh√¥ng tr∆∞·ªõc khi x·ª≠ l√≠ d·ªØ li·ªáu.&lt;/li&gt;
&lt;li&gt;Thi·∫øt k·∫ø b·ªô th·ª≠ song song vi·ªác ph√°t tri·ªÉn m·ªôt ch·ª©c nƒÉng n√†o ƒë√≥.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Ch√∫c c√°c b·∫°n code t·ªët v√† code vui, h√¥m nay tr·ªùi c√≥ nhi·ªÅu m√¢y&lt;/em&gt; ‚òÅÔ∏è &lt;em&gt;m√¨nh l·∫°i h·∫øt x√®ng&lt;/em&gt; üí∏ &lt;em&gt;nh·ªãn ƒë√≥i&lt;/em&gt; üòø &lt;em&gt;vi·∫øt b√†i l·ªüm d·ªüm ch·∫Øc ai ƒë√≥ s·∫Ω sai s√≥t, mong ƒë∆∞·ª£c g√≥p √Ω. C·∫£m ∆°n b·∫°n ƒë√£ ngh√© qua.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;üçÄ ngbaanh üçÄ&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>Speak &amp; Text Translator</title>
      <link>https://ngbaanh.github.io/project/speak-and-text-translator/</link>
      <pubDate>Mon, 20 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ngbaanh.github.io/project/speak-and-text-translator/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>https://ngbaanh.github.io/talk/example-talk/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ngbaanh.github.io/talk/example-talk/</guid>
      <description>&lt;p&gt;Embed your slides or video here using &lt;a href=&#34;https://gcushen.github.io/hugo-academic-demo/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;. Further details can easily be added using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Person Re-Identification System For Mobile Devices</title>
      <link>https://ngbaanh.github.io/publication/person-re-identification/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ngbaanh.github.io/publication/person-re-identification/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sudoku Generator</title>
      <link>https://ngbaanh.github.io/project/sudoku-generator/</link>
      <pubDate>Thu, 01 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ngbaanh.github.io/project/sudoku-generator/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mobile visual clothing search</title>
      <link>https://ngbaanh.github.io/publication/clothing-search/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://ngbaanh.github.io/publication/clothing-search/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
