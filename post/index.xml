<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Bá Anh Nguyễn</title>
    <link>https://ngbaanh.github.io/post/index.xml</link>
    <description>Recent content in Posts on Bá Anh Nguyễn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Bá Anh Nguyễn</copyright>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>☘Tập Code: Viết hàm xếp loại học sinh</title>
      <link>https://ngbaanh.github.io/post/tap-code--viet-ham-xep-loai-hoc-sinh/</link>
      <pubDate>Sun, 19 Mar 2017 11:34:00 +0000</pubDate>
      
      <guid>https://ngbaanh.github.io/post/tap-code--viet-ham-xep-loai-hoc-sinh/</guid>
      <description>

&lt;h1 id=&#34;đặt-vấn-đề&#34;&gt;Đặt vấn đề&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Hôm nay cuối tuần rảnh rỗi nên viết bài đầu tiên về Series Tập Code, đến bây giờ cũng code được một vài năm bây giờ nhớ lại những bài toán năm xưa tuy đơn giản nhưng làm mình bối rối khôn cùng.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Cùng xem chi tiết bài toán nhé.&lt;/p&gt;

&lt;p&gt;Điều kiện đánh giá và xếp loại học sinh như sau:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Học sinh thi 3 môn Toán, Lý, Hoá được đánh giá &lt;code&gt;học lực&lt;/code&gt; trên thang điểm &lt;code&gt;10&lt;/code&gt;. Thang xếp loại học lực từ cao đến thấp thứ tự như sau: &lt;code&gt;Giỏi, Khá, Trung Bình, Yếu&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Học sinh cũng được đánh giá &lt;code&gt;rèn luyện&lt;/code&gt; trên thang điểm &lt;code&gt;10&lt;/code&gt;. Thang xếp loại tương tự thang xếp loại học lực: &lt;code&gt;Tốt, Khá, Trung Bình, Yếu&lt;/code&gt;. Xếp loại phải tương ứng với năng lực.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Điểm trung bình chung nhỏ hơn 5.0 thì &lt;code&gt;xếp loại ban đầu&lt;/code&gt; &lt;em&gt;Yếu&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Điểm trung bình chung từ 5.0 đến dưới 6.5 thì xếp loại ban đầu &lt;em&gt;Trung Bình&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Điểm trung bình chung từ 6.5 đến dưới 8.0 thì xếp loại ban đầu &lt;em&gt;Khá&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Điểm trung bình chung từ 8.0 trở lên thì xếp loại ban đầu &lt;em&gt;Giỏi&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Học sinh &lt;code&gt;xếp loại ban đầu&lt;/code&gt; &lt;em&gt;Khá, Giỏi&lt;/em&gt; chỉ khi có điểm rèn luyện tương đương và điểm thành phần 3 môn có xếp loại tương ứng từ &lt;em&gt;Trung Bình, Khá&lt;/em&gt; trở lên. Nếu không thì giảm một bậc.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Trong các điểm thành phần, nếu có bất kì điểm nào nhỏ hơn 3.0, thì lập tức &lt;code&gt;xếp loại&lt;/code&gt; Yếu.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;Yêu cầu&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Viết một hàm đánh giá bằng ngôn ngữ C, đầu vào điểm thi 3 môn và điểm rèn luyện, đầu ra là một chuỗi đánh giá xếp loại thuộc bộ &lt;code&gt;{4, 3, 2, 1, 0}&lt;/code&gt; tương ứng thang xếp loại trong đề bài và &lt;code&gt;0&lt;/code&gt; là không đánh giá được.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Bài toán ai cũng biết, đã làm lập trình tất cả đều đã làm qua nhưng mà mình vẫn thấy nó có ích nên viết lại. Để ngắn gọn thì những điểm cần lưu ý mình đã đánh dấu nổi bật ngay trong đề bài bên trên. Lưu ý ngôn ngữ C ở đây  là &lt;code&gt;Standard C&lt;/code&gt; chứ không phải C++ hoặc C# nhé (vì lúc viết bài này máy mình chỉ có C thôi).&lt;/p&gt;

&lt;p&gt;Sau khi đọc xong đề bài thì lập tức tất cả đều có thể hình dung ra nguyên mẫu hàm như sau, dòm qua để nhảy sang phần sau nhé.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;int danh_gia(float toan, float ly, float hoa, float rl);
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;chuẩn-bị-những-gì-để-bắt-đầu&#34;&gt;Chuẩn bị những gì để bắt đầu&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Với những bạn sử dụng Windows thì có thể dùng bất kì cái gì đó code C được như DevCpp, hoặc CodeBlock hay gì gì đó khác là ok rồi. Mình chia tay Windows rồi thì sử dụng Terminal thay thế vậy, máy mình cũng chẳng cài gì nên chỉ có ngôn ngữ C là làm được trực tiếp mà thôi.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Trước tiên chúng ta di chuyển đến đâu đó trong máy tính, tạo một thư mục để chứa tệp mã nguồn. Ở đây mình sẽ tạo ngay giữa &lt;code&gt;Desktop&lt;/code&gt; một thư mục &lt;code&gt;tap-code&lt;/code&gt;, sau đó tạo tệp &lt;code&gt;main.c&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd ~/Desktop/
$ mkdir tap-code &amp;amp;&amp;amp; cd tap-code
$ touch main.c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mở nó ra và chiến thôi, tuỳ các bạn muốn mở nó trong IDE hay Notepad, còn nếu ai đó nhác như mình thì xử lí ngay tại cái Terminal với &lt;code&gt;nano&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ nano main.c
&lt;/code&gt;&lt;/pre&gt;

&lt;!---&lt;center&gt;
&lt;div class=&#34;embed video-player&#34;&gt;
  &lt;iframe
    class   = &#34;youtube-player&#34;
    type    = &#34;text/html&#34;
    width   = &#34;420&#34;
    height  = &#34;240&#34;
    src     = &#34;http://www.youtube.com/embed/NpVeCllju3Q?showinfo=0&amp;amp;rel=0&#34;
    allowfullscreen
    rel         = &#34;0&#34;
    showinfo    = &#34;0&#34;
    frameborder = &#34;0&#34;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;
&lt;/center&gt;
 --&gt;

&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=NpVeCllju3Q&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/NpVeCllju3Q/0.jpg&#34; alt=&#34;Hello world&#34; /&gt;&lt;/a&gt;
Phải kiểm tra mọi thứ thực sự ổn trước khi bắt đầu. 😹&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;p&gt;Hồi xưa học cấp 2 lúc đang làm thi thực hành Pascal, vừa đọc đề xong lao vào code no xôi chán chè thì build không được, nguyên nhân là do máy bị xì ke từ sớm, lúc chuyển sang máy khác thì không kịp nữa rồi.&lt;/p&gt;

&lt;/div&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;Trước khi bắt tay làm gì phải đảm bảo HelloWorld chạy được, mất có 16 giây thôi các bạn ạ.&lt;/p&gt;

&lt;/div&gt;
&lt;/p&gt;

&lt;h1 id=&#34;quay-lại-giải-quyết-bài-toán&#34;&gt;Quay lại giải quyết bài toán&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Có thể thấy là bài toán này có quá nhiều điều kiện lằng nhằng với nhau, nhưng chúng ta hãy khoan code ngay mà đánh giá nó trước. Phải tập trung xử lí những điều kiện mang tính quyết định trước.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-đầu-tiên-là-hợp-lệ-dữ-liệu&#34;&gt;1. Đầu tiên là hợp lệ dữ liệu&lt;/h2&gt;

&lt;p&gt;Chúng ta phải đảm bảo rằng người ta nhập điểm từ 0.0 ~ 10.0, đầu vào sai mà còn nhây lì tính toán là không được. Cho nên nếu dữ liệu sai thì phải trả về &lt;code&gt;0&lt;/code&gt; ngay lập tức.  😈&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int danh_gia(float toan, float ly, float hoa, float rl) {
  if (toan &amp;lt; 0 || ly &amp;lt; 0 || hoa &amp;lt; 0 || rl &amp;lt; 0 || toan &amp;gt; 10 || ly &amp;gt; 10 || hoa &amp;gt; 10 || rl &amp;gt; 10) {
    return 0; // --KHÔNG ĐÁNH GIÁ ĐƯỢC
  }
  // ... CODE NẾU HỢP LỆ
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sau câu lệnh &lt;code&gt;return&lt;/code&gt; không một dòng code nào được thực thi nữa, cho nên lúc này ta có thể viết tiếp mà không cần cụm &lt;code&gt;else { ... }&lt;/code&gt; nữa. Viết xuống bên dưới.&lt;/p&gt;

&lt;h2 id=&#34;2-điều-kiện-loại-bỏ-những-sự-thật-hiển-nhiên&#34;&gt;2. Điều kiện loại bỏ, những sự thật hiển nhiên&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;hellip; Xếp loại phải tương ứng với năng lực.
Trong các điểm thành phần, nếu có bất kì điểm nào nhỏ hơn 3.0, thì lập tức xếp loại Yếu.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Đây là trường hợp thấy xếp loại ngay mà không cần tính toán, 😌 viết tiếp xuống bên dưới:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int danh_gia(float toan, float ly, float hoa, float rl) {
  if (toan &amp;lt; 0 || ly &amp;lt; 0 || hoa &amp;lt; 0 || rl &amp;lt; 0 || toan &amp;gt; 10 || ly &amp;gt; 10 || hoa &amp;gt; 10 || rl &amp;gt; 10) {
    return 0; // --KHÔNG ĐÁNH GIÁ ĐƯỢC
  }
  if (toan &amp;lt; 3 || ly &amp;lt; 3 || hoa &amp;lt; 3 || rl &amp;lt; 5) { return 1; } // --YẾU
  // ... CODE NẾU CẦN TÍNH TOÁN
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-xác-định-xếp-loại-ban-đầu&#34;&gt;3. Xác định xếp loại ban đầu&lt;/h2&gt;

&lt;p&gt;Cần tính điểm trung bình chung của 3 môn học mới xét tiếp được.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int danh_gia(float toan, float ly, float hoa, float rl) { // [ ... ]
  // ... CODE NẾU CẦN TÍNH TOÁN
  float tb = (toan + ly + hoa) / 3;
  int xep_loai = tb &amp;lt; 5.0 ? 1 : (tb &amp;lt; 6.5 ? 2 : (tb &amp;lt; 8.0 ? 3 : 4));
  // ... CODE SÀNG LỌC
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Đoạn code tính xếp loại ban đầu như trên sử dụng toán tử điều kiện &lt;code&gt;?:&lt;/code&gt; cho ngắn gọn bởi vì mỗi nhánh rẽ ra nó chỉ thực hiện 1 công việc duy nhất là gán dữ liệu. Diễn giải ra thì như thế này, quá dài phải không:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int xep_loai;
if (tb &amp;lt; 5.0) { xep_loai = 1; }      // --YẾU
else if (tb &amp;lt; 6.5) { xep_loai = 2; } // --TRUNG BÌNH
else if (tb &amp;lt; 8.0) { xep_loai = 3; } // --KHÁ
else { xep_loai = 4; }               // --GIỎI
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;4-sàng-lọc-xếp-loại&#34;&gt;4. Sàng lọc xếp loại&lt;/h2&gt;

&lt;p&gt;Tiêu chuẩn sàng lọc ở đây chỉ áp dụng cho học sinh &lt;em&gt;Khá&lt;/em&gt; trở lên, gọi là thu gọn nhuệ khí của các anh ấy bớt, để hoà đồng hơn với những đứa học lực trung bình như mình.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Đùa đấy 😂&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Đơn giản là xét cái &lt;code&gt;xep_loai&lt;/code&gt; đã tính được ở ban nãy:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int danh_gia(float toan, float ly, float hoa, float rl) { // [ ... ]
  // ... CODE SÀNG LỌC
  if (xep_loai == 3) { // --NẾU ANH ẤY TIẾN BỘ?
    if (toan &amp;lt; 5.0 || ly &amp;lt; 5.0 || hoa &amp;lt; 5.0 || rl &amp;lt; 6.5) { // --MỐC HẠ KHÁ-&amp;gt;TB
      xep_loai--;
    }
  }
  if (xep_loai == 4) { // --NẾU ANH ẤY TIẾN BỘ HƠN?
    if (toan &amp;lt; 6.5 || ly &amp;lt; 6.5 || hoa &amp;lt; 6.5 || rl &amp;lt; 8.0) { // --MỐC HẠ GIỎI-&amp;gt;KHÁ
      xep_loai--;
    }
  }
  // ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bạn có thấy 4 lệnh if chồng nhau hơi vô duyên không 😄 rút nó ngắn bớt lại:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;int danh_gia(float toan, float ly, float hoa, float rl) { // [ ... ]
  // ... CODE SÀNG LỌC
  if (xep_loai == 3 &amp;amp;&amp;amp; (toan &amp;lt; 5.0 || ly &amp;lt; 5.0 || hoa &amp;lt; 5.0 || rl &amp;lt; 6.5)) {
    xep_loai--;
  }
  if (xep_loai == 4 &amp;amp;&amp;amp; (toan &amp;lt; 6.5 || ly &amp;lt; 6.5 || hoa &amp;lt; 6.5 || rl &amp;lt; 8.0)) {
    xep_loai--;
  }
  return xep_loai;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cuối cùng phải trả về kết quả xếp loại, thêm câu lệnh &lt;code&gt;return&lt;/code&gt; vào cuối hàm.&lt;/p&gt;

&lt;h2 id=&#34;5-xây-dựng-bộ-thử&#34;&gt;5. Xây dựng bộ thử&lt;/h2&gt;

&lt;p&gt;Để biết cái mình code có chạy đúng hay không thì cần xây dựng một vài trường hợp thử để kiểm tra.
Giả sử ta biết chắc một vài trường hợp thì có thể chọn ra để thử. Ví dụ bảng sau:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ngbaanh.github.io/img/post_img/tap-code-01/002.png&#34; alt=&#34;Test cases&#34; /&gt;
Dựa vào thông tin trên ta thiết kế một hàm &lt;code&gt;kiem_tra()&lt;/code&gt; để thử xem hàm &lt;code&gt;danh_gia()&lt;/code&gt; có hoạt động đúng như mong đợi hay không.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;void kiem_tra() {
  const int dong = 9, cot = 5;
  // -- Dữ liệu: { Toán; Lý; Hoá; Rèn Luyện; Kết Quả Mong Đợi },
  float data[dong][cot] = {
    { 11 , 9.0, 9.0, 9.0, 0 },
    { 9.0, 9.0, 9.0, 9.0, 4 },
    { 7.0, 7.0, 7.0, 7.0, 3 },
    { 6.0, 6.0, 6.0, 6.0, 2 },
    { 3.5, 4.0, 6.0, 6.5, 1 },

    { 2.5, 9.0, 8.0, 6.0, 1 },
    { 6.0, 9.0, 9.0, 8.0, 3 },
    { 7.0, 8.0, 9.0, 4.5, 1 },
    { 4.0, 9.0, 8.0, 6.0, 2 }
  };
  int i, ketqua;
  printf(&amp;quot;==== BAT DAU KIEM TRA =====\n&amp;quot;);
  for (i = 0; i &amp;lt; dong; i++) {
    ketqua = danh_gia(data[i][0], data[i][1], data[i][2], data[i][3]);
    printf(&amp;quot;DanhGia(%2.1f, %2.1f, %2.1f, %2.1f) = %i | %i | %10s.\n&amp;quot;,
      data[i][0], data[i][1], data[i][2], data[i][3], ketqua,
      (int)data[i][4],
      ((int)data[i][4] == ketqua ? &amp;quot;[o]&amp;quot; : &amp;quot;&amp;gt;&amp;gt; [x]&amp;quot;)
    );
  }
  printf(&amp;quot;======== KET THUC =========\n&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;Cái mảng 2 chiều đó nên là nạp dữ liệu từ file để tiện đường chỉnh sửa sau này, phạm vi bài viết mình đặt luôn vào đó cho gọn.&lt;/p&gt;

&lt;/div&gt;


&lt;h2 id=&#34;6-tận-hưởng-thành-quả&#34;&gt;6. Tận hưởng thành quả&lt;/h2&gt;

&lt;p&gt;Chúng ta cần phải viết một chương trình hoàn chỉnh để kiểm tra:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;stdio.h&amp;gt;

int danh_gia(float, float, float, float);
void kiem_tra();

int main() {
  //printf(&amp;quot;Hello world \n&amp;quot;);
  kiem_tra();
  return 0;
}

int danh_gia(float toan, float ly, float hoa, float rl) {
  if (toan &amp;lt; 0 || ly &amp;lt; 0 || hoa &amp;lt; 0 || rl &amp;lt; 0 || toan &amp;gt; 10 || ly &amp;gt; 10 || hoa &amp;gt; 10 || rl &amp;gt; 10) { return 0; }
  if (toan &amp;lt; 3 || ly &amp;lt; 3 || hoa &amp;lt; 3 || rl &amp;lt; 5) { return 1; } // --YẾU
  float tb = (toan + ly + hoa) / 3;
  int xep_loai = tb &amp;lt; 5.0 ? 1 : (tb &amp;lt; 6.5 ? 2 : (tb &amp;lt; 8.0 ? 3 : 4));
  if (xep_loai == 3 &amp;amp;&amp;amp; (toan &amp;lt; 5.0 || ly &amp;lt; 5.0 || hoa &amp;lt; 5.0 || rl &amp;lt; 6.5)) {
    xep_loai--; // --HẠ KHÁ &amp;gt; TB
  }
  if (xep_loai == 4 &amp;amp;&amp;amp; (toan &amp;lt; 6.5 || ly &amp;lt; 6.5 || hoa &amp;lt; 6.5 || rl &amp;lt; 8.0)) {
    xep_loai--; // --HẠ GIỎI &amp;gt; KHÁ
  }
  return xep_loai;
}

void kiem_tra() {
  const int dong = 9, cot = 5;
  // -- Dữ liệu: { Toán; Lý; Hoá; Rèn Luyện; Kết Quả Mong Đợi },
  float data[dong][cot] = {
    { 11 , 9.0, 9.0, 9.0, 0 },
    { 9.0, 9.0, 9.0, 9.0, 4 },
    { 7.0, 7.0, 7.0, 7.0, 3 },
    { 6.0, 6.0, 6.0, 6.0, 2 },
    { 3.5, 4.0, 6.0, 6.5, 1 },

    { 2.5, 9.0, 8.0, 6.0, 1 },
    { 6.0, 9.0, 9.0, 8.0, 3 },
    { 7.0, 8.0, 9.0, 4.5, 1 },
    { 4.0, 9.0, 8.0, 6.0, 2 }
  };
  int i, ketqua;
  printf(&amp;quot;==== BAT DAU KIEM TRA =====\n&amp;quot;);
  for (i = 0; i &amp;lt; dong; i++) {
    ketqua = danh_gia(data[i][0], data[i][1], data[i][2], data[i][3]);
    printf(&amp;quot;DanhGia(%2.1f, %2.1f, %2.1f, %2.1f) = %i | %i | %10s.\n&amp;quot;,
      data[i][0], data[i][1], data[i][2], data[i][3], ketqua,
      (int)data[i][4],
      ((int)data[i][4] == ketqua ? &amp;quot;[o]&amp;quot; : &amp;quot;&amp;gt;&amp;gt; [x]&amp;quot;)
    );
  }
  printf(&amp;quot;======== KET THUC =========\n&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thực hiện biên dịch và chạy thử chương trình, nếu bạn đang dùng terminal như mình:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ gcc -o main main.c &amp;amp;&amp;amp; ./main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thì đây là kết quả: 😎
&lt;img src=&#34;https://ngbaanh.github.io/img/post_img/tap-code-01/003.png&#34; alt=&#34;Tested cases&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Cố tình phá hỏng dữ liệu trường hợp thử thứ 6 thành: &lt;code&gt;{ 2.5, 9.0, 8.0, 6.0, 2 },&lt;/code&gt; và kết quả mới sẽ là&amp;hellip;
&lt;img src=&#34;https://ngbaanh.github.io/img/post_img/tap-code-01/004.png&#34; alt=&#34;Tested cases failed&#34; /&gt;&lt;/p&gt;

&lt;p&gt;👌 Quá hay phải không, nếu mỗi lần sửa đổi hàm &lt;code&gt;danh_gia()&lt;/code&gt; (có thể sẽ dẫn đến sai, mà đa phần là không biết sai ở đâu) thì chỉ cần gọi hàm &lt;code&gt;kiem_tra()&lt;/code&gt; một lần, ta sẽ biết được trường hợp nào sai, từ đó dễ dàng khoanh vùng để tìm lỗi hơn là mỗi kiểm tra phải nhập đi nhập lại.&lt;/p&gt;

&lt;h1 id=&#34;kết-luận&#34;&gt;Kết luận&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Lời chào cao hơn mâm cỗ, chạy Hello world trước khi bắt đầu công việc.&lt;/li&gt;
&lt;li&gt;Kiểm tra dữ liệu có hợp lệ hay không trước khi xử lí dữ liệu.&lt;/li&gt;
&lt;li&gt;Thiết kế bộ thử song song việc phát triển một chức năng nào đó.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Chúc các bạn code tốt và code vui, hôm nay trời có nhiều mây&lt;/em&gt; ☁️ &lt;em&gt;mình lại hết xèng&lt;/em&gt; 💸 &lt;em&gt;nhịn đói&lt;/em&gt; 😿 &lt;em&gt;viết bài lởm dởm chắc ai đó sẽ sai sót, mong được góp ý. Cảm ơn bạn đã nghé qua.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;🍀 ngbaanh 🍀&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>Customizing the homepage with widgets</title>
      <link>https://ngbaanh.github.io/post/widgets/</link>
      <pubDate>Wed, 20 Apr 2016 11:00:00 +0000</pubDate>
      
      <guid>https://ngbaanh.github.io/post/widgets/</guid>
      <description>

&lt;p&gt;Homepage widgets display as sections on the homepage. They can be enabled/disabled and configured as desired. Academic has the following widgets available to use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;About/biography&lt;/li&gt;
&lt;li&gt;Selected publications&lt;/li&gt;
&lt;li&gt;Recent publications&lt;/li&gt;
&lt;li&gt;Recent news/blog posts&lt;/li&gt;
&lt;li&gt;Projects&lt;/li&gt;
&lt;li&gt;Selected talks&lt;/li&gt;
&lt;li&gt;Recent talks&lt;/li&gt;
&lt;li&gt;Contact&lt;/li&gt;
&lt;li&gt;Custom widget (demonstrated with the &lt;em&gt;teaching&lt;/em&gt; example)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The example site that you copied to create your site uses all the different types of widget (except talks), so you can generally just delete the widgets you don&amp;rsquo;t need and customize the parameters of the widgets you wish to keep.&lt;/p&gt;

&lt;p&gt;The parameters for each widget vary. They can be found in the preamble/frontmatter (between the pair of &lt;code&gt;+++&lt;/code&gt;) for each widget installed in the &lt;code&gt;content/home/&lt;/code&gt; folder.&lt;/p&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;By default, publications will be displayed in a simple list. If you prefer a more detailed list with abstract and image, you can enable the detailed publication list on the homepage by setting &lt;code&gt;detailed_list = true&lt;/code&gt; in &lt;code&gt;content/home/publications.md&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;


&lt;h2 id=&#34;add-a-widget-to-the-homepage&#34;&gt;Add a widget to the homepage&lt;/h2&gt;

&lt;p&gt;To add a widget manually, copy the relevant widget from &lt;code&gt;themes/academic/exampleSite/content/home/&lt;/code&gt; to your &lt;code&gt;content/home/&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;Widget identifiers are set to their respective filenames, so a &lt;code&gt;content/home/about.md&lt;/code&gt; widget can be linked from the navigation bar by setting the relevant URL as &lt;code&gt;&amp;quot;#about&amp;quot;&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This means that if you want to use multiple instances of a widget, each widget will be assigned a unique ID based on the filename that you set. You can then use that ID for linking, like in the above example.&lt;/p&gt;

&lt;h2 id=&#34;using-the-custom-widget&#34;&gt;Using the custom widget&lt;/h2&gt;

&lt;p&gt;You can use the custom widget to create your own home page sections.&lt;/p&gt;

&lt;p&gt;Simply duplicate (copy/paste) and rename the example &lt;em&gt;teaching&lt;/em&gt; file at &lt;code&gt;content/home/teaching.md&lt;/code&gt;. Then edit the section title, weight (refer to &lt;em&gt;Ordering sections&lt;/em&gt; below), and content as desired.&lt;/p&gt;

&lt;p&gt;You may also wish to add a navigation link to the top of the page that points to the new section. This can be achieved by adding something similar to the following lines to your &lt;code&gt;config.toml&lt;/code&gt;, where the URL will consist of the first title word in lowercase:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[menu.main]]
    name = &amp;quot;Research&amp;quot;
    url = &amp;quot;#research&amp;quot;
    weight = 10
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;remove-a-widget-from-the-homepage&#34;&gt;Remove a widget from the homepage&lt;/h2&gt;

&lt;p&gt;If you do not require a particular widget, you can simply delete any associated files from the &lt;code&gt;content/home/&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;To remove a navigation link from the top of the page, remove the associated &lt;code&gt;[[menu.main]]&lt;/code&gt; entry in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;ordering-widgets&#34;&gt;Ordering widgets&lt;/h2&gt;

&lt;p&gt;The order that the homepage widgets are displayed in is defined by the &lt;code&gt;weight&lt;/code&gt; parameter in each of the files in the &lt;code&gt;content/home/&lt;/code&gt; directory. The widgets are displayed in ascending order of their &lt;code&gt;weight&lt;/code&gt;, so you can simply edit the &lt;code&gt;weight&lt;/code&gt; parameters as desired.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing content with Markdown, LaTeX, and Shortcodes</title>
      <link>https://ngbaanh.github.io/post/writing-markdown-latex/</link>
      <pubDate>Wed, 20 Apr 2016 10:00:00 +0000</pubDate>
      
      <guid>https://ngbaanh.github.io/post/writing-markdown-latex/</guid>
      <description>&lt;p&gt;Content can be written using &lt;a href=&#34;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&#34; target=&#34;_blank&#34;&gt;Markdown&lt;/a&gt;, &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34;&gt;LaTeX math&lt;/a&gt;, and &lt;a href=&#34;http://gohugo.io/extras/shortcodes/&#34; target=&#34;_blank&#34;&gt;Hugo Shortcodes&lt;/a&gt;. Additionally, HTML may be used for advanced formatting. This article gives an overview of the most common formatting options.&lt;/p&gt;

&lt;h2 id=&#34;sub-headings&#34;&gt;Sub-headings&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;## Heading 2
### Heading 3
#### Heading 4
##### Heading 5
###### Heading 6
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;emphasis&#34;&gt;Emphasis&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;Italics with *asterisks* or _underscores_.

Bold with **asterisks** or __underscores__.

Combined emphasis with **asterisks and _underscores_**.

Strikethrough with ~~two tildes~~.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ordered-lists&#34;&gt;Ordered lists&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;1. First item
2. Another item
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;unordered-lists&#34;&gt;Unordered lists&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;* First item
* Another item
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;images&#34;&gt;Images&lt;/h2&gt;

&lt;p&gt;Images may be added to a page by placing them in your &lt;code&gt;static/img/&lt;/code&gt; folder and referencing them using one of the following two notations:&lt;/p&gt;

&lt;p&gt;A general image:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;![alternative text for search engines](/img/screenshot.png)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A numbered figure with caption:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{&amp;lt; figure src=&amp;quot;/img/screenshot.png&amp;quot; title=&amp;quot;Figure Caption&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[I&#39;m a link](https://www.google.com)
[A post]({{&amp;lt; ref &amp;quot;post/hi.md&amp;quot; &amp;gt;}})
[A publication]({{&amp;lt; ref &amp;quot;publication/hi.md&amp;quot; &amp;gt;}})
[A project]({{&amp;lt; ref &amp;quot;project/hi.md&amp;quot; &amp;gt;}})
[Another section]({{&amp;lt; relref &amp;quot;hi.md#who&amp;quot; &amp;gt;}})
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;emojis&#34;&gt;Emojis&lt;/h2&gt;

&lt;p&gt;See the &lt;a href=&#34;http://www.webpagefx.com/tools/emoji-cheat-sheet/&#34; target=&#34;_blank&#34;&gt;Emoji cheat sheet&lt;/a&gt; for available emoticons. The following serves as an example, but you should remove the spaces between each emoji name and pair of semicolons:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;I : heart : Academic : smile :
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I ❤️ Academic 😄&lt;/p&gt;

&lt;h2 id=&#34;blockquote&#34;&gt;Blockquote&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; This is a blockquote.
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a blockquote.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;footnotes&#34;&gt;Footnotes&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;I have more [^1] to say.

[^1]: Footnote example.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I have more &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; to say.&lt;/p&gt;

&lt;h2 id=&#34;code-highlighting&#34;&gt;Code highlighting&lt;/h2&gt;

&lt;p&gt;Pass the &lt;em&gt;language&lt;/em&gt; of the code, such as &lt;code&gt;python&lt;/code&gt;, as a parameter after three backticks:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```python
# Example of code highlighting
input_string_var = input(&amp;quot;Enter some data: &amp;quot;)
print(&amp;quot;You entered: {}&amp;quot;.format(input_string_var))
```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Result:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Example of code highlighting
input_string_var = input(&amp;quot;Enter some data: &amp;quot;)
print(&amp;quot;You entered: {}&amp;quot;.format(input_string_var))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;highlighting-options&#34;&gt;Highlighting options&lt;/h3&gt;

&lt;p&gt;The Academic theme uses &lt;a href=&#34;https://highlightjs.org&#34; target=&#34;_blank&#34;&gt;highlight.js&lt;/a&gt; for source code highlighting, and highlighting is enabled by default for all pages. However, several configuration options are supported that allow finer-grained control over highlight.js.&lt;/p&gt;

&lt;p&gt;The following table lists the supported options for configuring highlight.js, along with their expected type and a short description. A &amp;ldquo;yes&amp;rdquo; in the &lt;strong&gt;config.toml&lt;/strong&gt; column means the value can be set globally in &lt;code&gt;config.toml&lt;/code&gt;, and a &amp;ldquo;yes&amp;rdquo; in the &lt;strong&gt;preamble&lt;/strong&gt; column means that the value can be set locally in a particular page&amp;rsquo;s preamble.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;option&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;config.toml&lt;/th&gt;
&lt;th&gt;preamble&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;highlight&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;enable/disable highlighting&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;highlight_languages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;slice&lt;/td&gt;
&lt;td&gt;choose additional languages&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;highlight_style&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;choose a highlighting style&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;highlight_version&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;choose the highlight.js version&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;option-highlight&#34;&gt;Option &lt;code&gt;highlight&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;highlight&lt;/code&gt; option allows enabling or disabling the inclusion of highlight.js, either globally or for a particular page. If the option is unset, it has the same effect as if you had specified &lt;code&gt;highlight = true&lt;/code&gt;. That is, the highlight.js javascript and css files will be included in every page. If you&amp;rsquo;d like to only include highlight.js files on pages that actually require source code highlighting, you can set &lt;code&gt;highlight = false&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;, and then override it by setting &lt;code&gt;highlight = true&lt;/code&gt; in the preamble of any pages that require source code highlighting. Conversely, you could enable highlighting globally, and disable it locally for pages that do not require it. Here is a table that shows whether highlighting will be enabled for a page, based on the values of &lt;code&gt;highlight&lt;/code&gt; set in &lt;code&gt;config.toml&lt;/code&gt; and/or the page&amp;rsquo;s preamble.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;config.toml&lt;/th&gt;
&lt;th&gt;page preamble&lt;/th&gt;
&lt;th&gt;highlighting enabled for page?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;unset or true&lt;/td&gt;
&lt;td&gt;unset or true&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;unset or true&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;unset or false&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;option-highlight-languages&#34;&gt;Option &lt;code&gt;highlight_languages&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;highlight_languages&lt;/code&gt; option allows you to specify additional languages that are supported by highlight.js, but are not considered &amp;ldquo;common&amp;rdquo; and therefore are not supported by default. For example, if you want source code highlighting for Go and clojure in all pages, set &lt;code&gt;highlight_languages = [&amp;quot;go&amp;quot;, &amp;quot;clojure&amp;quot;]&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;. If, on the other hand, you want to enable a language only for a specific page, you can set &lt;code&gt;highlight_languages&lt;/code&gt; in that page&amp;rsquo;s preamble.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;highlight_languages&lt;/code&gt; options specified in &lt;code&gt;config.toml&lt;/code&gt; and in a page&amp;rsquo;s preamble are additive. That is, if &lt;code&gt;config.toml&lt;/code&gt; contains, &lt;code&gt;highlight_languages = [&amp;quot;go&amp;quot;]&lt;/code&gt; and the page&amp;rsquo;s preamble contains &lt;code&gt;highlight_languages = [&amp;quot;ocaml&amp;quot;]&lt;/code&gt;, then javascript files for &lt;em&gt;both&lt;/em&gt; go and ocaml will be included for that page.&lt;/p&gt;

&lt;p&gt;If the &lt;code&gt;highlight_languages&lt;/code&gt; option is set, then the corresponding javascript files will be served from the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34;&gt;cdnjs server&lt;/a&gt;. To see a list of available languages, visit the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34;&gt;cdnjs page&lt;/a&gt; and search for links with the word &amp;ldquo;languages&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;highlight_languages&lt;/code&gt; option provides an easy and convenient way to include support for additional languages to be severed from a CDN. If serving unmodified files from cdnjs doesn&amp;rsquo;t meet your needs, you can include javascript files for additional language support via one of the methods described in the &lt;a href=&#34;No page found with path or logical name &#34;post/getting-started.md&#34;.
&#34; target=&#34;_blank&#34;&gt;getting started guide&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;option-highlight-style&#34;&gt;Option &lt;code&gt;highlight_style&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;highlight_style&lt;/code&gt; option allows you to select an alternate css style for highlighted code. For example, if you wanted to use the solarized-dark style, you could set &lt;code&gt;highlight_style = &amp;quot;solarized-dark&amp;quot;&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If the &lt;code&gt;highlight_style&lt;/code&gt; option is unset, the default is to use the file &lt;code&gt;/css/highlight.min.css&lt;/code&gt;, either the one provided by the Academic theme, or else the one in your local &lt;code&gt;static&lt;/code&gt; directory.  The &lt;code&gt;/css/highlight.min.css&lt;/code&gt; file provided by Academic is equivalent to the &lt;code&gt;github&lt;/code&gt; style from highlight.js.&lt;/p&gt;

&lt;p&gt;If the &lt;code&gt;highlight_style&lt;/code&gt; option &lt;em&gt;is&lt;/em&gt; set, then &lt;code&gt;/css/highlight.min.css&lt;/code&gt; is ignored, and the corresponding css file will be served from the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34;&gt;cdnjs server&lt;/a&gt;. To see a list of available styles, visit the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34;&gt;cdnjs page&lt;/a&gt; and search for links with the word &amp;ldquo;styles&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;See the &lt;a href=&#34;https://highlightjs.org/static/demo/&#34; target=&#34;_blank&#34;&gt;highlight.js demo page&lt;/a&gt; for examples of available styles.&lt;/p&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;Not all styles listed on the &lt;a href=&#34;https://highlightjs.org/static/demo/&#34; target=&#34;_blank&#34;&gt;highlight.js demo page&lt;/a&gt; are available from the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34;&gt;cdnjs server&lt;/a&gt;. If you want to use a style that is not served by cdnjs, just leave &lt;code&gt;highlight_style&lt;/code&gt; unset, and place the corresponding css file in &lt;code&gt;/static/css/highlight.min.css&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;


&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;If you don&amp;rsquo;t want to change the default style that ships with Academic but you do want the style file served from the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34;&gt;cdnjs server&lt;/a&gt;, set &lt;code&gt;highlight_style = &amp;quot;github&amp;quot;&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;highlight_style&lt;/code&gt; option is only recognized when set in &lt;code&gt;config.toml&lt;/code&gt;. Setting &lt;code&gt;highlight_style&lt;/code&gt; in your page&amp;rsquo;s preamble has no effect.&lt;/p&gt;

&lt;h4 id=&#34;option-highlight-version&#34;&gt;Option &lt;code&gt;highlight_version&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;highlight_version&lt;/code&gt; option, as the name implies, allows you to select the version of highlight.js you want to use. The default value is &amp;ldquo;9.9.0&amp;rdquo;. The &lt;code&gt;highlight_version&lt;/code&gt; option is only recognized when set in &lt;code&gt;config.toml&lt;/code&gt;. Setting &lt;code&gt;highlight_version&lt;/code&gt; in your page&amp;rsquo;s preamble has no effect.&lt;/p&gt;

&lt;h2 id=&#34;twitter-tweet&#34;&gt;Twitter tweet&lt;/h2&gt;

&lt;p&gt;To include a single tweet, pass the tweet’s ID from the tweet&amp;rsquo;s URL as parameter to the shortcode:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{&amp;lt; tweet 666616452582129664 &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;youtube&#34;&gt;Youtube&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;{{&amp;lt; youtube w7Ft2ymGmfc &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;vimeo&#34;&gt;Vimeo&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;{{&amp;lt; vimeo 146022717 &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;github-gist&#34;&gt;GitHub gist&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;{{&amp;lt; gist USERNAME GIST-ID  &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;speaker-deck&#34;&gt;Speaker Deck&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;{{&amp;lt; speakerdeck 4e8126e72d853c0060001f97 &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;rm-latex-math&#34;&gt;$\rm \LaTeX$ math&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-TeX&#34;&gt;$$\left [ – \frac{\hbar^2}{2 m} \frac{\partial^2}{\partial x^2} + V \right ] \Psi = i \hbar \frac{\partial}{\partial t} \Psi$$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$$\left [ – \frac{\hbar^2}{2 m} \frac{\partial^2}{\partial x^2} + V \right ] \Psi = i \hbar \frac{\partial}{\partial t} \Psi$$&lt;/p&gt;

&lt;p&gt;Alternatively, inline math can be written by wrapping the formula with only a single &lt;code&gt;$&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;This is inline: $\mathbf{y} = \mathbf{X}\boldsymbol\beta + \boldsymbol\varepsilon$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is inline: $\mathbf{y} = \mathbf{X}\boldsymbol\beta + \boldsymbol\varepsilon$&lt;/p&gt;

&lt;h2 id=&#34;table&#34;&gt;Table&lt;/h2&gt;

&lt;p&gt;Code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Markdown&#34;&gt;| Command           | Description                    |
| ------------------| ------------------------------ |
| `hugo`            | Build your website.            |
| `hugo serve -w`   | View your website.             |
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Result:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hugo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Build your website.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hugo serve -w&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;View your website.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;alerts&#34;&gt;Alerts&lt;/h2&gt;

&lt;p&gt;Alerts are a useful feature that add side content such as tips, notes, or warnings to your articles. They are especially handy when writing educational tutorial-style articles. Use the corresponding shortcodes to enable alerts inside your content:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{% alert note %}}
Here&#39;s a tip or note...
{{% /alert %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will display the following &lt;em&gt;note&lt;/em&gt; block:&lt;/p&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;Here&amp;rsquo;s a tip or note&amp;hellip;&lt;/p&gt;

&lt;/div&gt;


&lt;pre&gt;&lt;code&gt;{{% alert warning %}}
Here&#39;s some important information...
{{% /alert %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will display the following &lt;em&gt;warning&lt;/em&gt; block:&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;p&gt;Here&amp;rsquo;s some important information&amp;hellip;&lt;/p&gt;

&lt;/div&gt;

&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Footnote example.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
